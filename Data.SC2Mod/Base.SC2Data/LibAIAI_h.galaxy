include "LibCore_h"
include "LibGame_h"
include "LibMapM_h"

//--------------------------------------------------------------------------------------------------
// Library: AI
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libAIAI_ge_MinionAIStates_Advancing = 0;
const int libAIAI_ge_MinionAIStates_AttackingMinions = 1;
const int libAIAI_ge_MinionAIStates_AttackingStructure = 2;
const int libAIAI_ge_MinionAIStates_AttackingHero = 3;
const int libAIAI_ge_MinionAIStates_FallbackState = 4;
const int libAIAI_ge_MinionAIStates_FollowHero = 5;
const int libAIAI_ge_MinionAIStates_Leashing = 6;
const int libAIAI_ge_MinionAIStates_HoldPosition = 7;
string libAIAI_ge_MinionAIStates_Ident (int lp_val);
const int libAIAI_ge_DefenderAIState_Idle = 0;
const int libAIAI_ge_DefenderAIState_Fighting = 1;
const int libAIAI_ge_DefenderAIState_Leashing = 2;
string libAIAI_ge_DefenderAIState_Ident (int lp_val);
const int libAIAI_ge_HeroAIRavenLordTributeState_None = 0;
const int libAIAI_ge_HeroAIRavenLordTributeState_Warning = 1;
const int libAIAI_ge_HeroAIRavenLordTributeState_Spawned = 2;
const int libAIAI_ge_HeroAIGhostShipBeaconStatus_Closed = 0;
const int libAIAI_ge_HeroAIGhostShipBeaconStatus_Open = 1;
const int libAIAI_ge_HeroAIUnderworldBossState_Dead = 0;
const int libAIAI_ge_HeroAIUnderworldBossState_Warning = 1;
const int libAIAI_ge_HeroAIUnderworldBossState_Spawned = 2;
const int libAIAI_ge_HeroAIGameState_Act1 = 0;
const int libAIAI_ge_HeroAIGameState_Act2 = 1;
const int libAIAI_ge_HeroAIGameState_Act3 = 2;
const int libAIAI_ge_HeroAIDifficulty_Null = 0;
const int libAIAI_ge_HeroAIDifficulty_HeroAITutorial1Enemy = 1;
const int libAIAI_ge_HeroAIDifficulty_HeroAITutorial1Ally = 2;
const int libAIAI_ge_HeroAIDifficulty_HeroAITutorial2Enemy = 3;
const int libAIAI_ge_HeroAIDifficulty_HeroAITutorial2Ally = 4;
const int libAIAI_ge_HeroAIDifficulty_HeroAITryMeMode = 5;
const int libAIAI_ge_HeroAIDifficulty_HeroAITryMeModeAlly = 6;
const int libAIAI_ge_HeroAIDifficulty_HeroAIVeryEasy = 7;
const int libAIAI_ge_HeroAIDifficulty_HeroAIVeryEasyWithHumanAlly = 8;
const int libAIAI_ge_HeroAIDifficulty_HeroAIEasy = 9;
const int libAIAI_ge_HeroAIDifficulty_HeroAIEasyWithHumanAlly = 10;
const int libAIAI_ge_HeroAIDifficulty_HeroAIMedium = 11;
const int libAIAI_ge_HeroAIDifficulty_HeroAIVeryHard = 12;
const int libAIAI_ge_HeroAIDifficulty_HeroAIElite = 13;
string libAIAI_ge_HeroAIDifficulty_Ident (int lp_val);
const int libAIAI_ge_HeroAISpellType_Null = 0;
const int libAIAI_ge_HeroAISpellType_TargetEnemy = 1;
const int libAIAI_ge_HeroAISpellType_TargetHeroEnemy = 2;
const int libAIAI_ge_HeroAISpellType_TargetEnemyTower = 3;
const int libAIAI_ge_HeroAISpellType_TargetFriendlyTower = 4;
const int libAIAI_ge_HeroAISpellType_TargetFriendly = 5;
const int libAIAI_ge_HeroAISpellType_PointEnemy = 6;
const int libAIAI_ge_HeroAISpellType_PointHeroEnemy = 7;
const int libAIAI_ge_HeroAISpellType_PointFriendly = 8;
const int libAIAI_ge_HeroAISpellType_PointFriendlyMinion = 9;
const int libAIAI_ge_HeroAISpellType_PBaoeEnemy = 10;
const int libAIAI_ge_HeroAISpellType_PBaoeFriendly = 11;
const int libAIAI_ge_HeroAISpellType_SelfBuff = 12;
const int libAIAI_ge_HeroAISpellType_Other = 13;
const int libAIAI_ge_HeroAIObjective_PushLane = 0;
const int libAIAI_ge_HeroAIObjective_WaitInSpawn = 1;
const int libAIAI_ge_HeroAIObjective_CaptureDragon = 2;
const int libAIAI_ge_HeroAIObjective_DefendCore = 3;
const int libAIAI_ge_HeroAIObjective_TakeCamp = 4;
const int libAIAI_ge_HeroAIObjective_CaptureWatchTower = 5;
const int libAIAI_ge_HeroAIObjective_CaptureTearOfElune = 6;
const int libAIAI_ge_HeroAIObjective_CaptureObelisk = 7;
const int libAIAI_ge_HeroAIObjective_TurnInDoubloons = 8;
const int libAIAI_ge_HeroAIObjective_FollowHero = 9;
const int libAIAI_ge_HeroAIObjective_CollectSkulls = 10;
const int libAIAI_ge_HeroAIObjective_AttackTreasureChest = 11;
const int libAIAI_ge_HeroAIObjective_UseAbathurLogic = 12;
const int libAIAI_ge_HeroAIObjective_CustomMapObj = 13;
string libAIAI_ge_HeroAIObjective_Ident (int lp_val);
const int libAIAI_ge_HeroAIPriority_GenericUninterruptable = 0;
const int libAIAI_ge_HeroAIPriority_CollectSkullsInUnderworld = 1;
const int libAIAI_ge_HeroAIPriority_CustomMapVital = 2;
const int libAIAI_ge_HeroAIPriority_WaitInSpawnAnyState = 3;
const int libAIAI_ge_HeroAIPriority_AbathurLogicAnyState = 4;
const int libAIAI_ge_HeroAIPriority_FollowHeroFollowState = 5;
const int libAIAI_ge_HeroAIPriority_FollowHeroOtherState = 6;
const int libAIAI_ge_HeroAIPriority_PushLaneAttackCore = 7;
const int libAIAI_ge_HeroAIPriority_DefendCoreAnyState = 8;
const int libAIAI_ge_HeroAIPriority_CustomMapHigh = 9;
const int libAIAI_ge_HeroAIPriority_TakeCampTakingCamp = 10;
const int libAIAI_ge_HeroAIPriority_PushLaneDefendingBase = 11;
const int libAIAI_ge_HeroAIPriority_CaptureTearOfEluneHeadingToTribute = 12;
const int libAIAI_ge_HeroAIPriority_TakeCampMoveToCampWithHuman = 13;
const int libAIAI_ge_HeroAIPriority_CollectSkullsHeadingToUnderworld = 14;
const int libAIAI_ge_HeroAIPriority_CaptureObeliskOrDragon = 15;
const int libAIAI_ge_HeroAIPriority_CustomMapRegular = 16;
const int libAIAI_ge_HeroAIPriority_PushLanePushWithTeam = 17;
const int libAIAI_ge_HeroAIPriority_PushLaneTeamFightLikely = 18;
const int libAIAI_ge_HeroAIPriority_PushLaneDefendTown = 19;
const int libAIAI_ge_HeroAIPriority_PushLaneAttackTown = 20;
const int libAIAI_ge_HeroAIPriority_PushLaneRavenKingsCurseActive = 21;
const int libAIAI_ge_HeroAIPriority_PushLaneUnderworldBossActive = 22;
const int libAIAI_ge_HeroAIPriority_PushLanePushWithAllyMercs = 23;
const int libAIAI_ge_HeroAIPriority_PushLaneClearEnemyMercs = 24;
const int libAIAI_ge_HeroAIPriority_PushLaneNearActiveObelisk = 25;
const int libAIAI_ge_HeroAIPriority_TurnInDoubloonsHeadingToBeacon = 26;
const int libAIAI_ge_HeroAIPriority_CustomMapLow = 27;
const int libAIAI_ge_HeroAIPriority_TakeCampMoveToCampOnlyAI = 28;
const int libAIAI_ge_HeroAIPriority_GenericPreformTeamStrategy = 29;
const int libAIAI_ge_HeroAIPriority_AttackTreasureChestAnyState = 30;
const int libAIAI_ge_HeroAIPriority_PushLaneInMinionBattle = 31;
const int libAIAI_ge_HeroAIPriority_PushLaneChangingLanes = 32;
const int libAIAI_ge_HeroAIPriority_CaptureWatchTowerAnyState = 33;
const int libAIAI_ge_HeroAIPriority_PushLaneNormalLogic = 34;
const int libAIAI_ge_HeroAIPriority_Idle = 35;
string libAIAI_ge_HeroAIPriority_Ident (int lp_val);
const int libAIAI_ge_HeroAIStates_HSUnused = 0;
const int libAIAI_ge_HeroAIStates_HSDead = 1;
const int libAIAI_ge_HeroAIStates_HSAfterDeathAttack = 2;
const int libAIAI_ge_HeroAIStates_HSAfterDeathHeal = 3;
const int libAIAI_ge_HeroAIStates_HSReturnToSpawn = 4;
const int libAIAI_ge_HeroAIStates_HSWaitForGameToStart = 5;
const int libAIAI_ge_HeroAIStates_HSWaitToHeal = 6;
const int libAIAI_ge_HeroAIStates_HSWaitInSpawn = 7;
const int libAIAI_ge_HeroAIStates_HSAdvance = 8;
const int libAIAI_ge_HeroAIStates_HSRetreat = 9;
const int libAIAI_ge_HeroAIStates_HSAvoidAOE = 10;
const int libAIAI_ge_HeroAIStates_HSCastTactical = 11;
const int libAIAI_ge_HeroAIStates_HSMinionBattleRetreat = 12;
const int libAIAI_ge_HeroAIStates_HSMinionBattleReposition = 13;
const int libAIAI_ge_HeroAIStates_HSMinionBattleAttack = 14;
const int libAIAI_ge_HeroAIStates_HSMinionBattleHarass = 15;
const int libAIAI_ge_HeroAIStates_HSHarassSiegeEnemy = 16;
const int libAIAI_ge_HeroAIStates_HSWaitForMinions = 17;
const int libAIAI_ge_HeroAIStates_HSReturnToLane = 18;
const int libAIAI_ge_HeroAIStates_HSPickUpHealthGlobeJungle = 19;
const int libAIAI_ge_HeroAIStates_HSFocusHero = 20;
const int libAIAI_ge_HeroAIStates_HSFocusCore = 21;
const int libAIAI_ge_HeroAIStates_HSDefendCoreAttack = 22;
const int libAIAI_ge_HeroAIStates_HSDefendCoreLeash = 23;
const int libAIAI_ge_HeroAIStates_HSVehicleReturnToLane = 24;
const int libAIAI_ge_HeroAIStates_HSVehicleAdvanceInLane = 25;
const int libAIAI_ge_HeroAIStates_HSCaptureWatchTower = 26;
const int libAIAI_ge_HeroAIStates_HSPortHomeLane = 27;
const int libAIAI_ge_HeroAIStates_HSDrinkMoonwell = 28;
const int libAIAI_ge_HeroAIStates_HSTearOfEluneMoveToTear = 29;
const int libAIAI_ge_HeroAIStates_HSTearOfEluneCapture = 30;
const int libAIAI_ge_HeroAIStates_HSTearOfEluneGuard = 31;
const int libAIAI_ge_HeroAIStates_HSTearOfEluneDefend = 32;
const int libAIAI_ge_HeroAIStates_HSPickUpDoubloon = 33;
const int libAIAI_ge_HeroAIStates_HSTurnInDoubloons = 34;
const int libAIAI_ge_HeroAIStates_HSTurnInDoubloonsDefend = 35;
const int libAIAI_ge_HeroAIStates_HSTreasureChestMoveToChest = 36;
const int libAIAI_ge_HeroAIStates_HSTreasureChestAttackChest = 37;
const int libAIAI_ge_HeroAIStates_HSTreasureChestDefend = 38;
const int libAIAI_ge_HeroAIStates_HSMCampInit = 39;
const int libAIAI_ge_HeroAIStates_HSMoveToCamp = 40;
const int libAIAI_ge_HeroAIStates_HSWaitAtCamp = 41;
const int libAIAI_ge_HeroAIStates_HSAttackSoloCamp = 42;
const int libAIAI_ge_HeroAIStates_HSCaptureCampBeacon = 43;
const int libAIAI_ge_HeroAIStates_HSDefendCampAttack = 44;
const int libAIAI_ge_HeroAIStates_HSDefendCampLeash = 45;
const int libAIAI_ge_HeroAIStates_HSFleeInJungle = 46;
const int libAIAI_ge_HeroAIStates_HSPortHomeJungle = 47;
const int libAIAI_ge_HeroAIStates_HSHarassInJungle = 48;
const int libAIAI_ge_HeroAIStates_HSPaceAround = 49;
const int libAIAI_ge_HeroAIStates_HSObeliskCapture = 50;
const int libAIAI_ge_HeroAIStates_HSDragonHarass = 51;
const int libAIAI_ge_HeroAIStates_HSDragonCapture = 52;
const int libAIAI_ge_HeroAIStates_HSFollowerGuardLeader = 53;
const int libAIAI_ge_HeroAIStates_HSFollowerGuardLeaderLeash = 54;
const int libAIAI_ge_HeroAIStates_HSUnderworldEnter = 55;
const int libAIAI_ge_HeroAIStates_HSUnderworldKillMinions = 56;
const int libAIAI_ge_HeroAIStates_HSUnderworldFocusHero = 57;
const int libAIAI_ge_HeroAIStates_HSUnderworldPickupSkull = 58;
const int libAIAI_ge_HeroAIStates_HSUnderworldMoveToExit = 59;
const int libAIAI_ge_HeroAIStates_HSUnderworldTeleportHome = 60;
const int libAIAI_ge_HeroAIStates_HSUnderworldExit = 61;
const int libAIAI_ge_HeroAIStates_HSAbathurAdvanceInLane = 62;
const int libAIAI_ge_HeroAIStates_HSAbathurRetreatInLane = 63;
const int libAIAI_ge_HeroAIStates_HSAbathurHideInTown = 64;
const int libAIAI_ge_HeroAIStates_HSAbathurChangeLanes = 65;
const int libAIAI_ge_HeroAIStates_HSEnterTransport = 66;
const int libAIAI_ge_HeroAIStates_HSCustomMapState = 67;
const int libAIAI_ge_HeroAIStates_HSDefendObjective = 68;
const int libAIAI_ge_HeroAIStates_HSObjectiveStaging = 69;
const int libAIAI_ge_HeroAIStates_HSBusy = 70;
const int libAIAI_ge_HeroAIStates_HSDefault = 71;
string libAIAI_ge_HeroAIStates_Ident (int lp_val);
const int libAIAI_ge_HeroAIHeroTiers_TierInvalid = 0;
const int libAIAI_ge_HeroAIHeroTiers_TierLow = 1;
const int libAIAI_ge_HeroAIHeroTiers_TierMid = 2;
const int libAIAI_ge_HeroAIHeroTiers_TierHigh = 3;

// Constants
const int libAIAI_gv_aIWaveIndexMod = 4;
const fixed libAIAI_gv_aIMinionWaypointAdvanceDistance = 4.0;
const fixed libAIAI_gv_aIMinionAttackStructureBonusScanRange = 3.0;
const fixed libAIAI_gv_aIMinionAttackHeroBufferDistance = 2.0;
const fixed libAIAI_gv_aIMinionLeashingOnDistance = 8.5;
const fixed libAIAI_gv_aIMinionLeashingOffDistance = 3.0;
const int libAIAI_gv_aIDefenderIndexMod = 2;
const fixed libAIAI_gv_aIDefenderCloseEnoughDistance = 0.5;
const fixed libAIAI_gv_aIDefenderFarFromLeashPosition = 2.5;
const int libAIAI_gv_aIDefenderMaxLeashCount = 3;
const fixed libAIAI_gv_aIDefenderMinAgroTime = 1.0;
const fixed libAIAI_gv_aIDefenderMinLeashTime = 1.0;
const fixed libAIAI_gv_aIDefenderLeashReAnnounceTime = 4.0;
const fixed libAIAI_gv_aIDefenderMinTimeBeforeCasting = 4.0;
const fixed libAIAI_gv_aIHeroNearbyEvalFrequency = 0.4;
const fixed libAIAI_gv_aIHeroEnterCombatEvalRatio = 0.8;
const fixed libAIAI_gv_aIHeroNoEnemyDangerRatio = 1.0;
const fixed libAIAI_gv_aIHeroLaneEvalFrequency = 0.5;
const fixed libAIAI_gv_aIHeroHiddenEnemyConsiderTime = 6.0;
const fixed libAIAI_gv_aIHeroShouldntGoItAlone = 0.5;
const fixed libAIAI_gv_aIHeroNormalIndependenceLevel = 1.0;
const fixed libAIAI_gv_aIHeroSightRange = 12.0;
const fixed libAIAI_gv_aIHeroDangerPathMinDistance = 15.0;
const fixed libAIAI_gv_aIHeroLeashDistance = 12.0;
const fixed libAIAI_gv_aIHeroAdvanceLaneStepDistance = 10.0;
const fixed libAIAI_gv_aIHeroRetreatLaneStepDistance = 6.5;
const fixed libAIAI_gv_aIHeroJungleStepDistance = 7.0;
const fixed libAIAI_gv_aIHeroCloseEnoughDist = 3.0;
const fixed libAIAI_gv_aIHeroLaneLeashDistance = 12.0;
const fixed libAIAI_gv_aIHeroCloseToLaneDistance = 8.0;
const fixed libAIAI_gv_aIHeroMinRetreatDuration = 1.0;
const fixed libAIAI_gv_aIHeroExtraRetreatLaneTimeBeforeTeleporting = 2.5;
const fixed libAIAI_gv_aIHeroExtraRetreatJungleTimeBeforeTeleporting = 3.0;
const fixed libAIAI_gv_aIHeroMissingDelay = 30.0;
const fixed libAIAI_gv_aIHeroSamePositionDist = 0.25;
const fixed libAIAI_gv_aIHeroMoveStepDistance = 12.0;
const fixed libAIAI_gv_aIHeroMoveStepReconsiderTime = 4.0;
const fixed libAIAI_gv_aIHeroStartClearLaneDistance = 8.0;
const fixed libAIAI_gv_aIHeroStopClearLaneDistance = 4.0;
const fixed libAIAI_gv_aIHeroChooseTalentDelayBetweenPicks = 1.0;
const fixed libAIAI_gv_aIHeroChooseTalentDelayInCaseOfRejoin = 90.0;
const fixed libAIAI_gv_aIHeroAvoidAOEMinResponseTime = 0.15;
const int libAIAI_gv_aIHeroNumberOfAOERetreatTestPoints = 12;
const fixed libAIAI_gv_aIHeroAvoidAOEAvoidExtraDistance = 1.0;
const fixed libAIAI_gv_aIHeroAvoidAOERetreatExtraDistance = 2.0;
const fixed libAIAI_gv_aIHeroMountingCloseToEnemies = 10.0;
const fixed libAIAI_gv_aIHeroMountingFarFromEnemies = 15.0;
const fixed libAIAI_gv_aIHeroGlobalMountMinDistance = 20.0;
const fixed libAIAI_gv_aIHeroGlobalTeleportMinDistance = 40.0;
const fixed libAIAI_gv_aIHeroCostOfHearthstoneDistance = 35.0;
const fixed libAIAI_gv_aIHeroMaximumLaneOffset = 5.0;
const int libAIAI_gv_aIHeroNumberofLaneBuckets = 10;
const fixed libAIAI_gv_aIHeroLaneOffsetEnemyTowerScore = 40.0;
const fixed libAIAI_gv_aIHeroLaneOffsetEnemyHeroScore = 100.0;
const fixed libAIAI_gv_aIHeroLaneOffsetAllyHeroScore = 20.0;
const fixed libAIAI_gv_aIHeroAdvanceChangeLaneOffsetFrequency = 5.0;
const fixed libAIAI_gv_aIHeroRetreatChangeLaneOffsetFrequency = 2.0;
const fixed libAIAI_gv_aIHeroAvoidAllyHeroesSearchRadius = 12.0;
const fixed libAIAI_gv_aIHeroAvoidNearbyEnemyTowerSearchRadius = 16.0;
const fixed libAIAI_gv_aIHeroWalkDirectlyToLaneDistance = 60.0;
const int libAIAI_gv_aIHeroLargeEvalDifference = 33;
const fixed libAIAI_gv_aIHeroChangeLanesDelay = 0.0;
const fixed libAIAI_gv_aIHeroStayInLaneAfterHumanArrivesDuration = 90.0;
const fixed libAIAI_gv_aIHeroInitialLaneChoosingTime = 90.0;
const fixed libAIAI_gv_aIHeroRetreatDistanceToChangeLanes = 30.0;
const fixed libAIAI_gv_aIHeroRetreatToClearLaneThreatLevel = 3000.0;
const int libAIAI_gv_aIHeroLevelEvalValue = 150;
const int libAIAI_gv_aIMissingHeroLevelEvalValue = 30;
const int libAIAI_gv_aIHeroEnemyMinionSummonEvalValue = 100;
const int libAIAI_gv_aIHeroAllyMinionSummonEvalValue = 90;
const int libAIAI_gv_aIHeroEnemyTowerEvalValue = 750;
const int libAIAI_gv_aIHeroAllyTowerEvalValue = 1750;
const int libAIAI_gv_aIHeroAllyUnderworldBossEvalValue = 2500;
const fixed libAIAI_gv_aIHeroHighEnergyPercent = 85.0;
const fixed libAIAI_gv_aIHeroMediumEnergyPercent = 65.0;
const fixed libAIAI_gv_aIHeroLowEnergyPercent = 40.0;
const fixed libAIAI_gv_aIHeroChangeTargetDistanceWeight = 35.0;
const fixed libAIAI_gv_aIHeroChangeTargetTowerDistanceWeight = 15.0;
const fixed libAIAI_gv_aIHeroMinionBattleHarassDuration = 1.5;
const fixed libAIAI_gv_aIHeroMinionBattleMinRepositionRetreatDuration = 0.35;
const fixed libAIAI_gv_aIHeroMinionBattleMinDamagedRetreatDuration = 0.75;
const fixed libAIAI_gv_aIHeroMinionBattleRepositionRecalculateDelay = 0.6;
const fixed libAIAI_gv_aIHeroMeleeMinionBattleRepositionDuration = 0.7;
const fixed libAIAI_gv_aIHeroRangedMinionBattleRepositionDuration = 0.5;
const fixed libAIAI_gv_aIHeroFocusHeroHealth = 30.0;
const int libAIAI_gv_aIHeroMinAggresiveFocusHeroLevel = 5;
const fixed libAIAI_gv_aIHeroFocusHeroMaxChaseTime = 3.0;
const fixed libAIAI_gv_aIHeroFocusHeroMapMaxChaseTime = 6.0;
const fixed libAIAI_gv_aIHeroFocusHeroDelayAfterGivingUp = 2.0;
const fixed libAIAI_gv_aIHeroFocusHeroRecruitDistance = 14.0;
const fixed libAIAI_gv_aIHeroFocusHeroGiveUpDistance = 16.0;
const fixed libAIAI_gv_aIHeroCloseToTowerDistance = 7.0;
const fixed libAIAI_gv_aIHeroFarFromTowerDistance = 9.0;
const fixed libAIAI_gv_aIHeroPingDuration = 1.0;
const fixed libAIAI_gv_aIHeroFocusCorePingDuration = 5.0;
const fixed libAIAI_gv_aIHeroFocusCoreAlwaysHealth = 40.0;
const fixed libAIAI_gv_aIHeroFocusCoreDistractedHeatlh = 85.0;
const fixed libAIAI_gv_aIHeroFocusCorePingHealth = 99.0;
const fixed libAIAI_gv_aIHeroFocusCoreRecruitDistance = 20.0;
const fixed libAIAI_gv_aIHeroFocusHeroCoreUpDistance = 20.0;
const fixed libAIAI_gv_aIHeroDefendCorePingDuration = 15.0;
const fixed libAIAI_gv_aIHeroDefendCloseToCoreDistance = 15.0;
const fixed libAIAI_gv_aIHeroDefendFarFromCoreDistance = 30.0;
const fixed libAIAI_gv_aIHeroDefendPingExtendedCloseCoreDistance = 25.0;
const fixed libAIAI_gv_aIHeroDefendTownStructurePingDuration = 10.0;
const fixed libAIAI_gv_aIHeroDefendTownStructureNearbyRange = 12.0;
const fixed libAIAI_gv_aIHeroPushTownStructurePingDuration = 10.0;
const fixed libAIAI_gv_aIHeroLanerMercPingDuration = 15.0;
const fixed libAIAI_gv_aIHeroLanerMercPingBossExtendDuration = 45.0;
const fixed libAIAI_gv_aIHeroMoonwellSearchRadius = 25.0;
const fixed libAIAI_gv_aIMoonwellHealPercent = 25.0;
const fixed libAIAI_gv_aIHeroWatchTowerCloseRadius = 40.0;
const fixed libAIAI_gv_aIHeroWatchTowerConsiderFrequencyStart = 3.0;
const fixed libAIAI_gv_aIHeroWatchTowerConsiderFrequency = 15.0;
const fixed libAIAI_gv_aIHeroWatchTowerDelay = 40.0;
const fixed libAIAI_gv_aIHeroSiegeEnemyMinWeaponRange = 9.0;
const fixed libAIAI_gv_aIHeroSiegeEnemySearchRadius = 16.0;
const fixed libAIAI_gv_aIHeroCloseToSiegeEnemyDistance = 6.0;
const fixed libAIAI_gv_aIHeroHarassInJungleDuration = 1.5;
const fixed libAIAI_gv_aIHeroHarassInJungleTimeout = 4.0;
const fixed libAIAI_gv_aIHeroPaceAroundDuration = 2.5;
const fixed libAIAI_gv_aIHeroPaceAroundDelay = 2.0;
const fixed libAIAI_gv_aIHeroPaceAroundRepositionFrequency = 1.0;
const fixed libAIAI_gv_aIHeroPaceAroundRadius = 2.5;
const fixed libAIAI_gv_aIHeroCampPingDuration = 25.0;
const fixed libAIAI_gv_aIHeroCampConsiderFrequency = 12.0;
const fixed libAIAI_gv_aIHeroJoinCampConsiderFrequency = 1.5;
const fixed libAIAI_gv_aIHeroCampAttackDelay = 30.0;
const fixed libAIAI_gv_aIHeroHeadStraightToCampDist = 75.0;
const fixed libAIAI_gv_aIHeroHelpAITakeCampDist = 90.0;
const fixed libAIAI_gv_aIHeroHelpHumanTakeCampDist = 150.0;
const fixed libAIAI_gv_aIHeroEnemiesNearCampDistance = 20.0;
const fixed libAIAI_gv_aIHeroStopCampAttackPercent = 15.0;
const fixed libAIAI_gv_aIHeroCampCloseEnoughDist = 3.0;
const fixed libAIAI_gv_aIHeroMoveToCampTimeout = 60.0;
const fixed libAIAI_gv_aIHeroNearCampDistance = 6.0;
const fixed libAIAI_gv_aIHeroFarFromCampDistance = 16.0;
const fixed libAIAI_gv_aIHeroHighCampEval = 75.0;
const fixed libAIAI_gv_aIHeroHumanPlayerAssistingCheckFrequency = 1.0;
const int libAIAI_gv_aIHeroNumberOfCaptureBeaconGuardTestPoints = 12;
const int libAIAI_gv_aIHeroMinHelpHumanTakeCampLevel = 1;
const int libAIAI_gv_aIHeroMinHelpAITakeCampLevel = 3;
const int libAIAI_gv_aIHeroDoubloonTotalLevelNeeded = 5;
const int libAIAI_gv_aIHeroSiegeGiantTotalLevelNeeded = 10;
const int libAIAI_gv_aIHeroKnightsTotalLevelNeeded = 20;
const int libAIAI_gv_aIHeroGolemTotalLevelNeeded = 40;
const int libAIAI_gv_aIHeroOtherTotalLevelNeeded = 30;
const int libAIAI_gv_aIHeroCampTwoAttackerBonus = 5;
const int libAIAI_gv_aIHeroCampThreeAttackerBonus = 12;
const int libAIAI_gv_aIHeroCampFourAttackerBonus = 20;
const int libAIAI_gv_aIHeroCampFiveAttackerBonus = 30;
const int libAIAI_gv_aIHeroDoubloonMinimumNumberNeeded = 1;
const int libAIAI_gv_aIHeroSiegeGiantMinimumNumberNeeded = 2;
const int libAIAI_gv_aIHeroKnightsMinimumNumberNeeded = 2;
const int libAIAI_gv_aIHeroGolemMinimumNumberNeeded = 3;
const int libAIAI_gv_aIHeroOtherMinimumNumberNeeded = 3;
const fixed libAIAI_gv_aIHeroCampAlwaysRecruitToHelpDistance = 25.0;
const fixed libAIAI_gv_aIHeroCampAlwaysRecruitToHelpDistancePing = 35.0;
const fixed libAIAI_gv_aIHeroTeamStrategyConsiderFrequency = 20.0;
const fixed libAIAI_gv_aIHeroTeamStrategyDelay = 80.0;
const fixed libAIAI_gv_aIHeroDoubloonSearchRadius = 12.0;
const fixed libAIAI_gv_aIHeroDoubloonCloseToEnemyDistance = 6.0;
const int libAIAI_gv_aIHeroWantToTurnInDoubloonsAmountHumanTeam = 3;
const int libAIAI_gv_aIHeroWantToTurnInDoubloonsAmountAllAITeam = 5;
const fixed libAIAI_gv_aIHeroTurnInDoubloonsInterruptedTimeout = 45.0;
const fixed libAIAI_gv_aIHeroTurnInDoubloonsConsiderFrequency = 15.0;
const fixed libAIAI_gv_aIHeroWalkDirectlyToGhostShipBeaconDistance = 50.0;
const fixed libAIAI_gv_aIHeroCloseToGhostShipBeaconDistance = 12.0;
const fixed libAIAI_gv_aIHeroFarFromGhostShipBeaconDistance = 15.0;
const fixed libAIAI_gv_aIHeroTreasureChestPingedRecruitDistance = 35.0;
const fixed libAIAI_gv_aIHeroTreasureChestRecruitDistance = 20.0;
const fixed libAIAI_gv_aIHeroCloseToTreasureChestDistance = 10.0;
const fixed libAIAI_gv_aIHeroFarFromTreasureChestDistance = 13.0;
const fixed libAIAI_gv_aIHeroStandNearTreasureChestDistance = 6.0;
const fixed libAIAI_gv_aIHeroNearDoubloonDistance = 7.0;
const fixed libAIAI_gv_aIHeroTearOfEluneConsiderFrequency = 2.0;
const fixed libAIAI_gv_aIHeroTearOfEluneRecruitDistance = 75.0;
const fixed libAIAI_gv_aIHeroCloseToTearOfEluneDistance = 12.0;
const fixed libAIAI_gv_aIHeroFarFromTearOfEluneDistance = 15.0;
const fixed libAIAI_gv_aIHeroGuardPositionUpdateFrequency = 3.0;
const fixed libAIAI_gv_aIHeroObeliskConsiderFrequency = 2.0;
const fixed libAIAI_gv_aIHeroObeliskRecruitDistance = 25.0;
const fixed libAIAI_gv_aIHeroObeliskPingRecruitDistance = 35.0;
const fixed libAIAI_gv_aIHeroCloseToObeliskDistance = 10.0;
const fixed libAIAI_gv_aIHeroFarFromObeliskDistance = 13.0;
const fixed libAIAI_gv_aIHeroObeliskGuardDistance = 3.5;
const fixed libAIAI_gv_aIHeroEnterDragonVehicleConsiderFrequency = 2.0;
const fixed libAIAI_gv_aIHeroEnterDragonRecruitDistance = 20.0;
const fixed libAIAI_gv_aIHeroEnterDragonPingRecruitDistance = 30.0;
const fixed libAIAI_gv_aIHeroCloseToDragonStatueDistance = 13.0;
const fixed libAIAI_gv_aIHeroFarFromDragonStatueDistance = 16.0;
const fixed libAIAI_gv_aIHeroDragonStatueGuardOffset = 6.0;
const fixed libAIAI_gv_aIHeroFollowerCloseEnoughDistance = 5.0;
const fixed libAIAI_gv_aIHeroFollowerNearbyDistance = 10.0;
const fixed libAIAI_gv_aIHeroFollowerLeashDistance = 12.0;
const fixed libAIAI_gv_aIHeroFollowerFarDistance = 60.0;
const fixed libAIAI_gv_aIHeroUnderworldConsiderFrequency = 2.0;
const fixed libAIAI_gv_aIHeroSkullSearchRadius = 12.0;
const fixed libAIAI_gv_aIHeroUnderworldCloseToExitDistance = 12.0;
const fixed libAIAI_gv_aIHeroAbathurFarBehindFrontTowerDistance = 14.0;
const fixed libAIAI_gv_aIHeroAbathurCloseToHideInTownPosition = 10.0;
const fixed libAIAI_gv_aIHeroAbathurFarFromHideInTownPosition = 12.0;
const fixed libAIAI_gv_aIHeroAbathurChangeLanesDelay = 30.0;
const fixed libAIAI_gv_aIHeroAbathurCloseToEnemiesDistance = 12.0;
const fixed libAIAI_gv_aIHeroAbathurFarFromEnemiesDistance = 16.0;
const fixed libAIAI_gv_aIHeroIgnoreLongLastingAoEDuration = 2.0;
const fixed libAIAI_gv_aIHeroGravestoneSearchRadius = 12.0;
const fixed libAIAI_gv_aIHeroHealthGlobeSearchRadius = 6.0;
const int libAIAI_gv_aIHeroMaxWeaponChoices = 2;
const fixed libAIAI_gv_aIHeroVODelay = 20.0;
const fixed libAIAI_gv_aIHeroWaitForGameToStartRepositionFrequency = 2.0;
const fixed libAIAI_gv_aIHeroWaitForGameToStartMoveToGateTime = 15.0;
const fixed libAIAI_gv_aIHeroNearBuildingRange = 8.0;
const fixed libAIAI_gv_aIHeroLowHealthPercent = 40.0;
const fixed libAIAI_gv_aIHeroMediumHealthPercent = 65.0;
const fixed libAIAI_gv_aIHeroHighHealthPercent = 90.0;
const int libAIAI_gv_aITowerIndexMod = 2;
const fixed libAIAI_gv_aIGateNearbyRange = 5.0;
const int libAIAI_gv_aIMaxPathDistance = 65536;
const int libAIAI_gv_minionAIMaxActiveMinions = 511;
const int libAIAI_gv_towerMaxTowerCount = 125;
const int libAIAI_gv_defenderAIMaxNumberOfDefenderAI = 200;
const int libAIAI_gv_defenderAIMaxNumberOfDefendersPerGroup = 20;
const int libAIAI_gv_heroAI_MaxItemCount_C = 64;
const int libAIAI_gv_heroAIMaxNumberofAvoidAreas = 10;
const int libAIAI_gv_heroAIMaxCampPingCount = 10;
const int libAIAI_gv_heroAIMaxHeroPingCount = 10;
const int libAIAI_gv_heroAIMaxTownPingCount = 10;
const int libAIAI_gv_heroAIMaxLanerMercPingCount = 10;
const fixed libAIAI_gv_heroAIPortalUsageDistancePenalty = 12.0;
const int libAIAI_gv_heroAIMaxPortalPairs = 16;
const int libAIAI_gv_heroAIHumanPlayerType = 1;
const int libAIAI_gv_heroAIComputerPlayerType = 2;
const int libAIAI_gv_heroAINumberofDifficultyLevels2 = 13;
const int libAIAI_gv_heroAIMaxNumberofTalentBuilds = 10;
const int libAIAI_gv_heroAINumberofHeroTiers = 3;

// Structures
struct libAIAI_gs_MinionAI {
    bool lv_isAlive;
    int lv_state;
    int lv_nextWaypoint;
    point lv_unitPosition;
    unit lv_targetUnit;
    bool lv_leashing;
    bool lv_forceStateTransition;
    bool lv_prefersStructureTargets;
    point lv_battleStandardPoint;
    fixed lv_battleStandardLastUpdate;
    int lv_ownerPlayer;
    int lv_teamToAttack;
    fixed lv_attackRange;
    fixed lv_attackHeroRange;
    int lv_lane;
    int lv_waveNumber;
    unit lv_minionUnit;
    string lv_minionUnitType;
    int lv_initialWaypoint;
    int lv_debugLabel;
    unit lv_debugUnit;
};

struct libAIAI_gs_Towers {
    bool lv_hasTarget;
    unit lv_towerUnit;
    unit lv_targetUnit;
    fixed lv_range;
    bool lv_dead;
    int lv_owner;
};

struct libAIAI_gs_DefenderAI {
    bool lv_used;
    int lv_defenderCount;
    unitgroup lv_defendersGroup;
    unit[libAIAI_gv_defenderAIMaxNumberOfDefendersPerGroup + 1] lv_defenderUnits;
    point[libAIAI_gv_defenderAIMaxNumberOfDefendersPerGroup + 1] lv_leashPositions;
    region lv_leashRegion;
    region lv_aggroRegion;
    bool lv_healOnLeash;
    bool lv_canSeeCloaked;
    bool lv_campDeathEventDispatched;
    int lv_state;
    int lv_leashCount;
    unitgroup lv_validTargets;
    bool[libCore_gv_bALMaxEnginePlayerCount + 1] lv_playerIsThreat;
    fixed lv_timeStarted;
    fixed lv_minAgroTime;
    fixed lv_minLeashTime;
    fixed lv_lastAnnouncedLeashing;
    fixed lv_fightStartTime;
    int lv_debugLabel;
    unit lv_debugUnit;
};

struct libAIAI_gs_HeroAIDamageTracking {
    unit lv_lastAttacker;
    fixed lv_lastTimeAttacked;
};

struct libAIAI_gs_AIHeroRavenLordTributeStatus {
    int lv_tributeState;
    point lv_tributeWarningPosition;
    unit lv_tributeUnit;
};

struct libAIAI_gs_AIHeroRavenLordCurseStatus {
    bool lv_curseActive;
    int lv_activatedTeam;
};

struct libAIAI_gs_HeroAIGhostShipStatus {
    int lv_beaconStatus;
    unit lv_beaconUnit;
    int[libCore_gv_bALMaxTeams + 1] lv_doubloonsTurnedIn;
};

struct libAIAI_gs_HeroAIUnderworldStatus {
    bool lv_opened;
    int lv_totalSkulls;
    int lv_skullsRemaining;
    int[libCore_gv_bALMaxTeams + 1] lv_skullsCollected;
    region lv_underworldRegion;
    unitgroup lv_entrances;
    unitgroup lv_exits;
};

struct libAIAI_gs_HeroAIUnderworldBossStatus {
    int lv_state;
    int lv_lane;
    unit lv_underworldBossUnit;
};

struct libAIAI_gs_AIHeroItemData {
    string lv_item;
};

struct libAIAI_gs_AIHeroLaneInfo {
    int lv_numAllyTowns;
    int lv_numAllyHeroes;
    int lv_numAllyHumanHeroes;
    playergroup lv_allyHeroes;
    int lv_numEnemyTowns;
    int lv_numEnemyHeroes;
    int lv_numEnemySiegeGiants;
    int lv_numEnemyOgres;
    int lv_numEnemyOgreKings;
    int lv_numEnemyDragonKnights;
    int lv_numEnemyUnderworldBossSkulls;
    int lv_numAllySiegeGiants;
    int lv_numAllyOgres;
    int lv_numAllyOgreKings;
    int lv_numAllyDragonKnights;
    int lv_numAllyUnderworldBossSkulls;
    fixed lv_eval;
    fixed lv_contentionPointLanePosition;
    point lv_contentionPoint;
    fixed lv_contentionPointDangerRatio;
    int lv_numEnemyHeroesNearContentionPoint;
    int lv_numEnemyMinionsNearContentionPoint;
    fixed lv_totalEnemyMaxLifeAtContentionPoint;
    int lv_numAllyMinionsNearContentionPoint;
    int lv_numNonSiegeAllyMinionsNearContentionPoint;
    fixed lv_frontTowerPosition;
    fixed lv_frontMinionPosition;
    fixed lv_frontEnemyMinionPosition;
    fixed lv_frontHumanAllyPosition;
    fixed lv_coreDefensePosition;
    fixed lv_lastTimeHumanAllyEnteredLane;
};

struct libAIAI_gs_AIHeroLocationInfo {
    fixed lv_lastSeenTime;
    point lv_lastSeenLocation;
    int lv_lastSeenLane;
};

struct libAIAI_gs_AIHeroAvoidArea {
    unit lv_unit;
    point lv_position;
    fixed lv_radius;
    fixed lv_startTime;
    fixed lv_expireTime;
    bool lv_fleeImmediately;
};

struct libAIAI_gs_AIHeroHomeEval {
    int lv_numAllyHeroes;
    int lv_numAllyMinionsAndSummons;
    int lv_numEnemyHeroes;
    int lv_numEnemyMinionsAndSummons;
};

struct libAIAI_gs_AIHeroTeamData {
    int lv_difficulty;
    int lv_gameState;
    fixed lv_nextLaneEvalUpdateTime;
    libAIAI_gs_AIHeroLaneInfo[libGame_gv_laneMaxCount_C + 1] lv_laneData;
    libAIAI_gs_AIHeroHomeEval lv_homeEval;
    libAIAI_gs_AIHeroLocationInfo[libCore_gv_bALMaxEnginePlayerCount + 1] lv_heroTrackingData;
    int lv_numberOfMissingEnemies;
    fixed lv_nextTeamStrategyTime;
    int lv_weakestLane;
    int lv_avoidPlayer;
    int lv_avoidLane;
    libAIAI_gs_AIHeroAvoidArea[libAIAI_gv_heroAIMaxNumberofAvoidAreas + 1] lv_avoidAreas;
    int lv_numberofAvoidAreas;
    fixed lv_lastTimePlayedAttackVO;
    fixed lv_nextTearOfEluneConsiderTime;
    fixed lv_nextMapObjectiveConsiderTime;
    fixed lv_nextUseDragonVehicleConsiderTime;
    fixed lv_nextUnderworldConsiderTime;
    fixed lv_nextWatchTowerConsiderTime;
    fixed lv_nextDoubloonChestConsiderTime;
    fixed lv_nextMapMechanicConsiderTime;
    int lv_additionalCoreDefendersNeeded;
};

struct libAIAI_gs_AIHeroTeamPlayerData {
    playergroup lv_players;
    playergroup lv_humanPlayers;
    playergroup lv_aIPlayers;
};

struct libAIAI_gs_AIHeroCampPing {
    int lv_playerWhoPinged;
    int lv_campPinged;
    fixed lv_pingTime;
};

struct libAIAI_gs_AIHeroCampData {
    fixed lv_startCampCheckTimer;
    fixed lv_joinCampCheckTimer;
    int lv_numberofCampPings;
    libAIAI_gs_AIHeroCampPing[libAIAI_gv_heroAIMaxCampPingCount + 1] lv_campPings;
};

struct libAIAI_gs_AIHeroHeroPing {
    fixed lv_pingExpireTime;
    int lv_playerWhoPinged;
    unit lv_pingedHero;
};

struct libAIAI_gs_AIHeroHeroPingData {
    libAIAI_gs_AIHeroHeroPing[libAIAI_gv_heroAIMaxHeroPingCount + 1] lv_heroPings;
};

struct libAIAI_gs_AIHeroCorePing {
    fixed lv_pingExpireTime;
    int lv_playerWhoPinged;
    unit lv_pingedCore;
};

struct libAIAI_gs_AIHeroTownPing {
    fixed lv_pingExpireTime;
    int lv_playerWhoPinged;
    unit lv_pingedStructure;
};

struct libAIAI_gs_AIHeroTownPingData {
    libAIAI_gs_AIHeroTownPing[libAIAI_gv_heroAIMaxTownPingCount + 1] lv_townPings;
};

struct libAIAI_gs_AIHeroLanerMercPing {
    fixed lv_pingExpireTime;
    int lv_playerWhoPinged;
    unit lv_pingedMerc;
    bool lv_isBossMerc;
    bool lv_isVehicleMerc;
    int lv_laneIndex;
};

struct libAIAI_gs_AIHeroLanerMercPingData {
    libAIAI_gs_AIHeroLanerMercPing[libAIAI_gv_heroAIMaxLanerMercPingCount + 1] lv_lanerMercPings;
};

struct libAIAI_gs_HeroAIPortalPair {
    unit lv_portalIn;
    point lv_portalInPosition;
    unit lv_portalOut;
    point lv_portalOutPosition;
    abilcmd lv_portalAbility;
};

struct libAIAI_gs_HeroAITalentBuild {
    fixed lv_chance;
    string[libCore_gv_dataHeroesMaxTalentTiers + 1] lv_talents;
};

struct libAIAI_gs_HeroAIAbility {
    bool lv_useOnlyToRevealCloaked;
};

struct libAIAI_gs_AIHeroData {
    unit lv_targetTransport;
    trigger lv_postStateUpdate;
    unit lv_currentHeroUnit;
    int lv_heroState;
    fixed lv_timeEnteredState;
    fixed lv_timeTargetAcquired;
    int lv_difficulty;
    bool lv_wantsToGoHome;
    fixed lv_startOffensiveHealth;
    fixed lv_endOffensiveHealth;
    fixed lv_returnToSpawnHealth;
    fixed lv_independence;
    bool lv_hasMount;
    abilcmd lv_mountAbility;
    abilcmd lv_dismountAbility;
    string lv_mountBehavior;
    abilcmd lv_speedAbility;
    abilcmd lv_teleportAbility;
    fixed lv_maxTeleportDistance;
    bool lv_teleportRequiresVisibility;
    abilcmd lv_teleportToAllyAbility;
    string lv_buffGlobeType;
    string lv_buffGlobeSecondaryType;
    bool lv_buffGlobeMustBeOwned;
    bool lv_buffGlobeGivesEnergy;
    bool lv_buffGlobeGivesHealth;
    string lv_buffGlobeStackBehavior;
    int lv_buffGlobeStackMax;
    string lv_buffGlobeStackEffectValidation;
    bool lv_hasTactical;
    libAIAI_gs_HeroAIAbility[libCore_gv_dataHeroesMaxAbilitiesPerHero + 1] lv_abilities;
    int[libCore_gv_dataHeroesMaxAbilitiesPerHero + 1] lv_abilityType;
    fixed[libCore_gv_dataHeroesMaxAbilitiesPerHero + 1] lv_abilityRange;
    abilcmd[libCore_gv_dataHeroesMaxAbilitiesPerHero + 1] lv_castAbility;
    fixed lv_nextOffensiveSpellCheckTime;
    fixed lv_nextCloakRevealTime;
    int lv_startingLane;
    bool lv_shouldWaitInSpawn;
    bool lv_wantsToWaitInSpawn;
    fixed lv_allowedToChooseTalentsTime;
    int lv_pickedTalentBuild;
    int lv_numberOfTalentBuilds;
    libAIAI_gs_HeroAITalentBuild[libAIAI_gv_heroAIMaxNumberofTalentBuilds + 1] lv_talentBuilds;
    int lv_currentLane;
    int lv_desiredLane;
    int lv_tutorialForceFollowPlayer;
    int lv_pingFollowPlayer;
    fixed lv_nextChangeLanesConsiderTime;
    fixed lv_lastRetreatStartTime;
    bool lv_safeInLaneRetreating;
    fixed lv_safeInLaneStartTime;
    fixed lv_laneOffset;
    fixed lv_nextLaneOffsetChangeTime;
    int lv_curWaypointIndex;
    point lv_curWaypointPoint;
    point lv_laneTargetPosition;
    bool lv_safeInJungleRetreating;
    fixed lv_safeInJungleStartTime;
    int lv_returnToLaneLane;
    point lv_returnToLanePosition;
    point lv_jungleTargetPosition;
    unit lv_curTargetHealthGlobe;
    fixed lv_nextWaitingRepositionTime;
    fixed lv_nextMinionBattleAttackTime;
    fixed lv_minionBattleAttackTimeout;
    unit lv_minionBattleHarassTarget;
    fixed lv_minionBattleHarassTimeout;
    fixed lv_minionBattleRetreatTimeout;
    fixed lv_nextMinionBattleRepositionRecalculateTime;
    fixed lv_minionBattleRepositionPositionOffset;
    unit lv_siegeHarassTarget;
    unit lv_harassInJungleTarget;
    fixed lv_harassInJungleTimeout;
    fixed lv_nextHarassInJungleCheckTime;
    point lv_paceAroundStartPosition;
    fixed lv_paceAroundTimeout;
    fixed lv_nextPaceAroundRepositionTime;
    bool lv_wantsToDefendCore;
    int lv_curMinionCamp;
    int lv_humanPlayerAssisting;
    int lv_humanPlayerAssistingDistance;
    fixed lv_nextHumanPlayerAssistingDistanceCheckTime;
    int lv_cancelCampAttackCounter;
    fixed lv_moveToCampStartTime;
    fixed lv_arrivedAtCampTime;
    int lv_curTargetWatchTower;
    unit lv_curTargetMoonwell;
    fixed lv_avoidAOETimeout;
    fixed lv_castTacticalTimeout;
    bool lv_castTacticalEndIfIdleOrVeryInjured;
    fixed lv_nextWaitForGameToStartRepositionTime;
    point lv_waitForGameToStartPosition;
    fixed lv_leaveSpawnTime;
    unit lv_targetHero;
    point lv_targetHeroCheckPosition;
    fixed lv_focusHeroTimeout;
    fixed lv_nextFocusHeroCheckTime;
    bool lv_wantsToUseAbathurLogic;
    bool lv_wantsToCaptureTearOfElune;
    point lv_tearGuardPosition;
    fixed lv_nextTearGuardPositionUpdateTime;
    fixed lv_nextTurnInDoubloonsConsiderTime;
    unit lv_curTargetDoubloon;
    bool lv_wantsToTurnInDoubloons;
    unit lv_curTargetTreasureChest;
    unit lv_curTargetObelisk;
    unit lv_curTargetDragonStatue;
    unit lv_curTargetUnderworldEntrance;
    unit lv_curTargetUnderworldExit;
    bool lv_wantsToCollectSkulls;
    unit lv_curTargetSkull;
    unit lv_underworldTargetMinion;
    unit lv_underworldTargetHero;
    point lv_underworldExitTargetPosition;
    trigger lv_onReturnToCurrentObjective;
    int lv_statePriority;
    trigger lv_exitConditionTrigger;
    int lv_hSCustomStateTimeSpent;
    trigger lv_hSMapStateTrigger;
    int lv_hSMapStateCurrentState;
    unit lv_hSMapStateCurrentTargetUnit;
    int lv_hSMapStateCurrentTargetIndex;
    point lv_hSMapStateCurrentTargetPoint;
    int lv_hSMapStatePriority;
    fixed lv_hSMapStateNextConsiderTime;
    unit lv_hSMapStatePingedTargetUnit;
    bool lv_wantsToDoCustomMapLogic;
    bool lv_aIBehaviorsEnabled;
    bool lv_moveActive;
    point lv_moveToPoint;
    unit lv_moveToUnit;
    fixed lv_moveStartRange;
    fixed lv_moveStopRange;
    fixed lv_moveStepNextConsiderTime;
    point lv_moveStepPoint;
    unit lv_movePortal;
    fixed lv_defendObjectiveGuardPositionRange;
    fixed lv_defendObjectiveGuardTargetingRange;
    abilcmd lv_defendObjectiveCaptureAbility;
    point lv_objectiveStagingPoint;
    trigger lv_hSDeadStateTrigger;
    bool lv_announcedRetreat;
    fixed lv_enemyEvalMultiplier;
    fixed lv_nextEvalUpdateTime;
    point lv_heroLaneDirection;
    point lv_heroClosestLanePoint;
    fixed lv_heroLanePosition;
    fixed lv_totalEnemyEval;
    fixed lv_enemyHeroEval;
    fixed lv_enemyTowerEval;
    unitgroup lv_enemies;
    unitgroup lv_enemyHeroes;
    unitgroup lv_enemyMinionsSummons;
    unitgroup lv_enemyTowers;
    fixed lv_totalAllyEval;
    fixed lv_allyHeroEval;
    fixed lv_allyTowerEval;
    unitgroup lv_allies;
    unitgroup lv_allyHeroes;
    unitgroup lv_allyMinionsSummons;
    unitgroup lv_allyTowers;
    fixed lv_selfEval;
    unitgroup lv_visibleEnemyHeroes;
};

// Variable Declarations
fixed libAIAI_gv_aIRangedMinionWeaponRange;
fixed libAIAI_gv_aIMinionEnemyMinionAttackRange;
fixed libAIAI_gv_aIMinionAttackHeroDistance;
fixed libAIAI_gv_aIHeroLaneBucketWidth;
int[6] libAIAI_gv_aIHeroCampNumAttackersBonus;
int libAIAI_gv_aIHeroMapMechanicStackMaximum;
fixed libAIAI_gv_aITowerRange;
int[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroAct2StartLevel;
int[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroAct3StartLevel;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroUseUltimates;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroMinSpellFrequency;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroMinTeamSpellFrequency;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroFudgeTarget;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroSkillshotMissRate;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroLineUpClearShotForSkillShots;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroPrioritizeHealingHumanAlliesThreshold;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroCastAbilitiesOnWeakHumanHeroes;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroAlwaysRetreatFromDamagePercent;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroRetreatWhenTargettedByHeroPercent;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroRetreatWhenTargettedByEnemyCorePercent;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroRetreatWhenTargettedByTowerPercent;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroRetreatWhenTargettedByNonHeroNonTowerPercent;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroTeleportPercent;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroMinOffensiveHealth;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroWatchforMissingEnemyHeroes;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroPathAroundDanger;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroPreemptivelyRetreatFromTowers;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroChanceToRetaliateWhenAttacked;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroRetreatWhenAttackedByHeroResponseDelay;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroStayBehindMinionsNearTowers;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroWaitForMinionsWhenLaning;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroMinionBattleAttackDurationMelee;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroMinionBattleAttackDurationRanged;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroEnterTeamFights;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroAvoidEarlyGameTeamFights;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroFocusWeakHeroes;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroFocusWeakCore;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroNoticeCloakedHeroesTimeout;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroPickUpHealthAndBuffGlobes;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroSmartLaneTargetting;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroAvoidTargettingHeroes;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroAvoidTargettingFountains;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroVehicleAvoidTargettingMinions;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroEnemyNearbyEvalUnderestimatePercent;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroEnemyLaneEvalUnderestimatePercent;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroDefendObjectivesPoorlyAgainstHumans;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroObjectiveStagingEnabled;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroOnlyInitiateEasyCamps;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroChanceNearbyMinionCamp;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroChanceMiddleMinionCamp;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroChanceFarMinionCamp;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroAlwaysWaitAtCampForHumanPlayer;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroCampWaitTimeout;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroLetHumanPlayerCaptureCampBeacon;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroTributeCaptureDelay;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroObeliskRecaptureDelay;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroUseDragonVehicleDelay;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroEnterUnderworldDelay;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroDoubloonPickupSoloDelay;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroDoubloonPickupHumanDelay;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroDoubloonChestDelay;
int[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroMaxDefendCoreAIHeroes;
int[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroHighestHeroSelectTier;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroPerformTeamStrategies;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroNeverEnterLateGame;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroDodgeAOEAbilities;
bool[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroUseMoonwells;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroChanceCaptureWatchTower;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroExtraWaitAfterRespawn;
fixed[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroUseMountDelay;
int[libAIAI_gv_heroAINumberofDifficultyLevels2 + 1] libAIAI_gv_aIHeroMaxObjectiveCaptureAIHeroes;
unitfilter libAIAI_gv_uF_MinionAI_EnemyMinions;
unitfilter libAIAI_gv_uF_MinionAI_AnyEnemyMinions2;
unitfilter libAIAI_gv_uF_MinionAI_EnemyStructure;
unitfilter libAIAI_gv_uF_MinionAI_EnemyHero;
libAIAI_gs_MinionAI[libAIAI_gv_minionAIMaxActiveMinions + 1] libAIAI_gv_minionAIActiveMinions;
int libAIAI_gv_minionAIActiveMinionsUpperBound;
bool libAIAI_gv_minionAIMinionsIgnoreLaneRequirements;
unitfilter libAIAI_gv_uF_MinionAI_AnyEnemyMinions;
unitfilter libAIAI_gv_uF_MinionAI_AnyEnemySummoned;
unitfilter libAIAI_gv_uF_MinionAI_AnyEnemyForStructure;
unitfilter libAIAI_gv_uF_MinionAI_GetNearestEnemyStructure;
unitfilter libAIAI_gv_uF_MinionAI_GetNearestEnemyHero;
bool libAIAI_gv_minionAIDisplayAIStatus;
int libAIAI_gv_towerTowerCount;
libAIAI_gs_Towers[libAIAI_gv_towerMaxTowerCount + 1] libAIAI_gv_towerTowers;
bool libAIAI_gv_towerSystemOn;
unitfilter libAIAI_gv_uF_TowerAI_Scan_Group;
unitfilter libAIAI_gv_uF_TowerAI_Scan_Group_Minion;
unitfilter libAIAI_gv_uF_TowerAI_Scan_Group_Summoned;
unitfilter libAIAI_gv_uF_TowerAI_Scan_Group_CFH;
unitfilter libAIAI_gv_uF_TowerAI_Required_Summoned;
unitfilter libAIAI_gv_uF_TowerAI_Required_Heroic;
unitfilter libAIAI_gv_uF_TowerAI_Required_Minion;
unitfilter libAIAI_gv_uF_TowerAI_Required_Ignored;
unitfilter libAIAI_gv_uF_TowerAI_Required_Invulnerable;
unitfilter libAIAI_gv_uF_TowerAI_Required_Stasis;
unitfilter libAIAI_gv_uF_TowerAI_Required_Visible;
libAIAI_gs_DefenderAI[libAIAI_gv_defenderAIMaxNumberOfDefenderAI + 1] libAIAI_gv_defenderAI;
int libAIAI_gv_defenderAIDefenderAIUpperBound;
string libAIAI_gv_defenderAILastCreatedDefenderAIIndex;
bool libAIAI_gv_defenderAIDisplayAIStatus;
bool libAIAI_gv_heroAIActive;
libAIAI_gs_HeroAIDamageTracking[libCore_gv_bALMaxEnginePlayerCount + 1] libAIAI_gv_heroAIDamageTracking;
int libAIAI_gv_heroAITriggerCurrentPlayer;
int libAIAI_gv_heroAITriggerReturnInteger;
int libAIAI_gv_heroAITeamMapLogicFaction;
int libAIAI_gv_heroAICustomStateCurrentPlayer;
bool libAIAI_gv_heroAICustomStateReturnBoolean;
int[libMapM_gv_jungleMaxCamps + 1] libAIAI_gv_heroAIOrderMercCampList;
int[libMapM_gv_jungleMaxCamps + 1] libAIAI_gv_heroAIChaosMercCampList;
int[libMapM_gv_jungleMaxCamps + 1] libAIAI_gv_heroAIMiddleMercCampList;
libAIAI_gs_AIHeroRavenLordCurseStatus libAIAI_gv_heroAIRavenLordCurseStatus;
libAIAI_gs_AIHeroRavenLordTributeStatus libAIAI_gv_heroAIRavenLordTributeStatus;
libAIAI_gs_HeroAIGhostShipStatus libAIAI_gv_heroAIGhostShipStatus;
unitgroup libAIAI_gv_heroAITreasureChests;
unitgroup libAIAI_gv_heroAIDragonShireObelisks;
unit libAIAI_gv_heroAIDragonShireDragon;
libAIAI_gs_HeroAIUnderworldStatus libAIAI_gv_heroAIUnderworldStatus;
libAIAI_gs_HeroAIUnderworldBossStatus[libCore_gv_bALMaxTeams + 1] libAIAI_gv_heroAIUnderworldBossStatus;
trigger libAIAI_gv_heroAITeamMapLogicTrigger;
trigger libAIAI_gv_heroAICustomChooseLaneLogicTrigger;
libAIAI_gs_AIHeroItemData[libAIAI_gv_heroAI_MaxItemCount_C + 1] libAIAI_gv_heroAIItemData;
libAIAI_gs_AIHeroTeamData[libCore_gv_bALMaxTeams + 1] libAIAI_gv_heroAITeamData;
libAIAI_gs_AIHeroTeamPlayerData[libCore_gv_bALMaxTeams + 1] libAIAI_gv_heroAITeamPlayerData;
libAIAI_gs_AIHeroCampData[libCore_gv_bALMaxTeams + 1] libAIAI_gv_heroAITeamCampData;
libAIAI_gs_AIHeroHeroPingData[libCore_gv_bALMaxTeams + 1] libAIAI_gv_heroAITeamHeroPingData;
libAIAI_gs_AIHeroCorePing[libCore_gv_bALMaxTeams + 1] libAIAI_gv_heroAITeamFocusCorePingData;
libAIAI_gs_AIHeroCorePing[libCore_gv_bALMaxTeams + 1] libAIAI_gv_heroAITeamDefendCorePingData;
libAIAI_gs_AIHeroTownPingData[libCore_gv_bALMaxTeams + 1] libAIAI_gv_heroAITeamPushTownPingData;
libAIAI_gs_AIHeroTownPingData[libCore_gv_bALMaxTeams + 1] libAIAI_gv_heroAITeamDefendTownPingData;
libAIAI_gs_AIHeroLanerMercPingData[libCore_gv_bALMaxTeams + 1] libAIAI_gv_heroAITeamLanerMercPingData;
int[libCore_gv_bALMaxTeams + 1] libAIAI_gv_heroAIPortalCount;
libAIAI_gs_HeroAIPortalPair[libCore_gv_bALMaxTeams + 1][libAIAI_gv_heroAIMaxPortalPairs + 1] libAIAI_gv_heroAIPortals;
bool libAIAI_gv_heroAIFollowerNearbyMapObjectiveFound;
libAIAI_gs_AIHeroData[libCore_gv_bALMaxEnginePlayerCount + 1] libAIAI_gv_aIHeroes;
int[libCore_gv_dataHeroesMaxHeroCount + 1] libAIAI_gv_heroAIHeroCount;
string[libAIAI_gv_heroAINumberofHeroTiers + 1][libCore_gv_dataHeroesMaxHeroCount + 1] libAIAI_gv_heroAIHeroTierData;
abilcmd libAIAI_gv_aIMoveAbil;
abilcmd libAIAI_gv_aITurnAbil;
abilcmd libAIAI_gv_aIAttackAbil;
abilcmd libAIAI_gv_aIAttackAllyAbil;
abilcmd libAIAI_gv_aIStopAbil;

// Function Declarations
bool libAIAI_gf_MinionAITargetIsAttackableStructure (unit lp_caster, unit lp_target);
int libAIAI_gf_MinionAINewMinionIndex ();
point libAIAI_gf_MinionAIGetPreviousWaypointForMinion (int lp_minionIndex);
int libAIAI_gf_MinionAIGetWaypointCount (int lp_minionIndex);
unit libAIAI_gf_MinionAIGetHeroToFollow (int lp_minionIndex);
bool libAIAI_gf_MinionAIIsValidTarget (int lp_minionIndex, unit lp_targetUnit);
unit libAIAI_gf_MinionAIGetNearestEnemyMinionSummonedInRangeOfMinion (int lp_minionIndex, fixed lp_range);
unit libAIAI_gf_MinionAIGetNearestEnemyStructureInRangeOfMinion (int lp_minionIndex, fixed lp_range);
unit libAIAI_gf_MinionAIGetNearestEnemyHeroInRangeOfMinion (int lp_minionIndex, fixed lp_range);
bool libAIAI_gf_MinionAIWithinLeashingDistanceofLane (int lp_minionIndex);
void libAIAI_gf_MinionAIUpdateBattleStandardDataForMinion (int lp_minionIndex);
bool libAIAI_gf_MinionAITestPastNextWaypoint (int lp_minionIndex);
void libAIAI_gf_MinionAIAdvanceMinionToNextWaypoint (int lp_minionIndex);
int libAIAI_gf_MinionAIDetermineState (int lp_minionIndex, int lp_oldState);
int libAIAI_gf_MinionAIDetermineAttackStateAndTarget (int lp_minionIndex);
bool libAIAI_gf_MinionAIShouldAttackMinions (int lp_minionIndex, unit lp_currentTarget);
bool libAIAI_gf_MinionAIShouldAttackStructure (int lp_minionIndex, unit lp_currentTarget);
int libAIAI_gf_MinionAIAttackHeroState (int lp_minionIndex, unit lp_currentTarget);
void libAIAI_gf_MinionAITransitionMinionIntoState (int lp_minionIndex, int lp_state);
void libAIAI_gf_MinionAIIssueFightOrder (int lp_minionIndex);
int libAIAI_gf_MinionAIGetIndexForMinion (unit lp_minion);
point libAIAI_gf_MinionAIGetWaypointForMinion (int lp_minionIndex, int lp_waypointIndex);
point libAIAI_gf_MinionAIGetNextWaypointForMinion (int lp_minionIndex);
void libAIAI_gf_MinionAIFreeMinionIndex (int lp_minionIndex);
void libAIAI_gf_MinionAIUnhookUnitFromMinionAI (unit lp_unit);
void libAIAI_gf_MinionAIStartMinionAI (int lp_waveNumberOverride, unit lp_unit, int lp_lane, int lp_nextWaypoint, bool lp_pathToInitialWaypoint, int lp_teamToAttack, bool lp_prefersStructureTargets);
void libAIAI_gf_MinionAIStartMinionAISimple (unit lp_unit);
void libAIAI_gf_MinionAITurnMinionAISystemOnOff (bool lp_onOff);
void libAIAI_gf_MinionAIPauseUnpauseMinionAISystem (bool lp_pauseUnpause);
void libAIAI_gf_MinionAIMinionsIgnoreLaneRequirements (bool lp_trueFalse);
void libAIAI_gf_MinionAIUpdateAIStatus (int lp_minionIndex);
void libAIAI_gf_MinionAIToggleAIStatus (bool lp_showHide);
void libAIAI_gf_DestroyTowerTargetPersistent (int lp_towerIndex);
void libAIAI_gf_TowerTurnTowerSystemOnOff (bool lp_onOff);
int libAIAI_gf_DefenderAIDetermineState (int lp_defenderAIIndex, int lp_oldState);
void libAIAI_gf_DefenderAIStateLogic (int lp_defenderAIIndex);
void libAIAI_gf_DefenderAIUpdateValidTargetList (int lp_defenderAIIndex);
void libAIAI_gf_DefenderAITransitionDefenderAIIntoState (int lp_defenderAIIndex, int lp_state);
void libAIAI_gf_DefenderAIIssueFightingOrderToCreep (int lp_defenderAIIndex, int lp_creep);
void libAIAI_gf_DefenderAICreepDies (int lp_defenderAIIndex, unit lp_unit, int lp_killingPlayer);
int libAIAI_gf_DefenderAINewIndex ();
void libAIAI_gf_StartDefenderAI (unitgroup lp_defenders, region lp_leashRegion, region lp_aggroRegion, bool lp_healOnLeash);
void libAIAI_gf_AddUnitsToDefenderAI (int lp_defenderAIIndex, unitgroup lp_defenders);
int libAIAI_gf_LastCreatedDefenderAI ();
int libAIAI_gf_DefenderAIIndexOfUnit (unit lp_unit);
unitgroup libAIAI_gf_DefenderGroup (int lp_defenderAIIndex);
unit libAIAI_gf_DefenderUnit (int lp_defenderAIIndex, int lp_index);
int libAIAI_gf_DefenderUnitCount (int lp_defenderAIIndex);
bool libAIAI_gf_DefendersAreFighting (int lp_defenderAIIndex);
bool libAIAI_gf_DefendersAnyOutsideLeashRegion (int lp_defenderAIIndex);
point libAIAI_gf_DefenderMovePointIntoRegion (point lp_point, region lp_region);
void libAIAI_gf_DefenderAIUpdateAIStatus (int lp_defenderIndex);
void libAIAI_gf_DefenderAIToggleAIStatus (bool lp_show);
void libAIAI_gf_HeroAIInitializeItemData ();
void libAIAI_gf_HeroAIRegisterPortalPair (int lp_teamIndex, unit lp_portalIn, unit lp_portalOut, abilcmd lp_portalAbility);
void libAIAI_gf_HeroAIUnregisterPortalPair (int lp_teamIndex, unit lp_portalIn);
int libAIAI_gf_HeroAIFindPortalToDestination (int lp_trigPlayer, point lp_destination, fixed lp_distanceToDestination);
text libAIAI_gf_HeroAIDifficultyDisplayText (int lp_player);
int libAIAI_gf_HeroAIDifficultyToTalentInteger (int lp_player);
void libAIAI_gf_HeroAIInitializeHeroTierData ();
void libAIAI_gf_HeroAIAddHeroToTierData (int lp_tier, string lp_heroType);
void libAIAI_gf_SummonedAIInitialAttackLogic (bool lp_attackCreatorsTarget, unit lp_summonedUnit, unit lp_creatorUnit, bool lp_continuousScan);
bool libAIAI_gf_AIIsPointBehindEnemyGateEstimate (point lp_selfPosition, int lp_selfPlayer, point lp_otherPoint);
fixed libAIAI_gf_AIGetAnyWeaponRangeIncludesNonActive (unit lp_unit);
unit libAIAI_gf_AIGetRandomEnemyHeroInRangeOfUnitWithMinimumRangeRequirements (unit lp_unit, point lp_position, fixed lp_minimumRange, fixed lp_maximumRange, unit lp_restrictedUnit);
bool libAIAI_gf_IsAbilityHeroic (int lp_player, abilcmd lp_ability);
unitgroup libAIAI_gf_AIGetAlliesInRegion (int lp_player, region lp_region);
unitgroup libAIAI_gf_AIGetAllyHeroesInRegion (int lp_player, region lp_region);
unitgroup libAIAI_gf_AIGetAllyMinionsInRegion (int lp_player, region lp_region);
unitgroup libAIAI_gf_AIGetEnemiesInRegion (int lp_player, region lp_region);
unitgroup libAIAI_gf_AIGetEnemyHeroesInRegion (int lp_player, region lp_region);
unitgroup libAIAI_gf_AIGetEnemyMinionsInRegion (int lp_player, region lp_region);
unitgroup libAIAI_gf_AIGetVisibleUnitsFromGroup (int lp_player, unitgroup lp_group);
fixed libAIAI_gf_AIGetActiveWeaponRange (unit lp_unit);
bool libAIAI_gf_AIUnitBehindEnemyGateEstimate (point lp_selfPosition, int lp_selfPlayer, unit lp_enemyUnit);
fixed libAIAI_gf_AIGetClosestLanePosition (int lp_laneIndex, point lp_point);
fixed libAIAI_gf_AIGetLaneOffsetOfPoint (int lp_laneIndex, point lp_testPoint);
fixed libAIAI_gf_AIAdvanceLanePosition (int lp_faction, int lp_laneIndex, fixed lp_lanePosition, fixed lp_distance);
fixed libAIAI_gf_AIRetreatLanePosition (int lp_faction, int lp_laneIndex, fixed lp_lanePosition, fixed lp_distance);
fixed libAIAI_gf_AIMoveAlongLane (int lp_laneIndex, fixed lp_lanePosition, fixed lp_distance);

// Trigger Declarations
trigger libAIAI_gt_IncludeAI;
trigger libAIAI_gt_MinionAIAIRoutine;
trigger libAIAI_gt_TowerAIRoutine;
trigger libAIAI_gt_TowerAttacksUnit;
trigger libAIAI_gt_InitializeTowerAISystem;
trigger libAIAI_gt_DefenderAICreepsAttacked;
trigger libAIAI_gt_DefenderAIDefenderAILogic;
trigger libAIAI_gt_HeroAIInitializeDifficultyLevelData;

// Library Initialization
void libAIAI_InitVariables ();

