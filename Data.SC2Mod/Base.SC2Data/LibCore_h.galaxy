include "TriggerLibs/NativeLib"

//--------------------------------------------------------------------------------------------------
// Library: Core
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libCore_ge_GameModes_Sandbox = -1;
const int libCore_ge_GameModes_Debug = -1;
const int libCore_ge_GameModes_TryMe = 0;
const int libCore_ge_GameModes_Launcher = 1;
const int libCore_ge_GameModes_Normal = 2;
const int libCore_ge_GameModes_Swift = 3;
const int libCore_ge_GameModes_Mutator = 4;
const int libCore_ge_GameModes_Arena = 5;
const int libCore_ge_GameModes_Arcade = 6;
const int libCore_ge_GameModes_AttackDefend = 7;
const int libCore_ge_GameModes_PvE = 8;
string libCore_ge_GameModes_Ident (int lp_val);
const int libCore_ge_GameMutators_None = 0;
const int libCore_ge_GameMutators_Winterveil = 1;
string libCore_ge_GameMutators_Ident (int lp_val);
const int libCore_ge_GameOptions_None = 0;
const int libCore_ge_GameOptions_Preloading = 1;
const int libCore_ge_GameOptions_Sandbox = 2;
const int libCore_ge_GameOptions_SameHeroSelection = 3;
string libCore_ge_GameOptions_Ident (int lp_val);
const int libCore_ge_BlueRedTeams_Nothing = 0;
const int libCore_ge_BlueRedTeams_Blue = 1;
const int libCore_ge_BlueRedTeams_Red = 2;
const int libCore_ge_MAPMap_Unknown = 0;
const int libCore_ge_MAPMap_Launcher = 1;
const int libCore_ge_MAPMap_BuriedBackwoods = 2;
const int libCore_ge_MAPMap_KingsCrest = 3;
const int libCore_ge_MAPMap_CursedHollow = 4;
const int libCore_ge_MAPMap_CursedHollowWinterveil = 5;
string libCore_ge_MAPMap_Ident (int lp_val);
const int libCore_ge_MAPTileset_Kingscrest = 0;
const int libCore_ge_MAPTileset_RavenCourt = 1;
const int libCore_ge_AbilityCooldownLocation_Unit = 0;
const int libCore_ge_AbilityCooldownLocation_Player = 1;
const int libCore_ge_AnnouncerVOEvents_Null = 0;
const int libCore_ge_AnnouncerVOEvents_GetReadyForBattle = 1;
const int libCore_ge_AnnouncerVOEvents_BattleStartingIn = 2;
const int libCore_ge_AnnouncerVOEvents_Countdown10 = 3;
const int libCore_ge_AnnouncerVOEvents_Countdown5 = 4;
const int libCore_ge_AnnouncerVOEvents_Countdown4 = 5;
const int libCore_ge_AnnouncerVOEvents_Countdown3 = 6;
const int libCore_ge_AnnouncerVOEvents_Countdown2 = 7;
const int libCore_ge_AnnouncerVOEvents_Countdown1 = 8;
const int libCore_ge_AnnouncerVOEvents_LetTheBattleBegin = 9;
const int libCore_ge_AnnouncerVOEvents_YouHaveBeenKilled = 10;
const int libCore_ge_AnnouncerVOEvents_AllyKilled = 11;
const int libCore_ge_AnnouncerVOEvents_EnemyKilledNonparticipants = 12;
const int libCore_ge_AnnouncerVOEvents_EnemyKilledParticipants = 13;
const int libCore_ge_AnnouncerVOEvents_HeroKilledObserver = 14;
const int libCore_ge_AnnouncerVOEvents_DoubleKill = 15;
const int libCore_ge_AnnouncerVOEvents_TripleKill = 16;
const int libCore_ge_AnnouncerVOEvents_QuadraKill = 17;
const int libCore_ge_AnnouncerVOEvents_MegaKill = 18;
const int libCore_ge_AnnouncerVOEvents_SixKill = 19;
const int libCore_ge_AnnouncerVOEvents_SevenKill = 20;
const int libCore_ge_AnnouncerVOEvents_EightKill = 21;
const int libCore_ge_AnnouncerVOEvents_NineKill = 22;
const int libCore_ge_AnnouncerVOEvents_TenKill = 23;
const int libCore_ge_AnnouncerVOEvents_TeamKill = 24;
const int libCore_ge_AnnouncerVOEvents_BlueTeamKilled = 25;
const int libCore_ge_AnnouncerVOEvents_RedTeamKilled = 26;
const int libCore_ge_AnnouncerVOEvents_AllyFirstBlood = 27;
const int libCore_ge_AnnouncerVOEvents_EnemyFirstBlood = 28;
const int libCore_ge_AnnouncerVOEvents_BlueTeamFirstBlood = 29;
const int libCore_ge_AnnouncerVOEvents_RedTeamFirstBlood = 30;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeStart = 31;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeEndYou = 32;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeUpgrade1Mayhem = 33;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeUpgrade2Rampage = 34;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeUpgrade3Untouchable = 35;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeUpgrade4AllStar = 36;
const int libCore_ge_AnnouncerVOEvents_APlayerHasLeftTheGame = 37;
const int libCore_ge_AnnouncerVOEvents_APlayerHasRejoinedTheGame = 38;
const int libCore_ge_AnnouncerVOEvents_GravestoneRevive = 39;
const int libCore_ge_AnnouncerVOEvents_AlliedOutpostDestroyed = 40;
const int libCore_ge_AnnouncerVOEvents_EnemyOutpostDestroyed = 41;
const int libCore_ge_AnnouncerVOEvents_AlliedKeepDestroyed = 42;
const int libCore_ge_AnnouncerVOEvents_EnemyKeepDestroyed = 43;
const int libCore_ge_AnnouncerVOEvents_BlueTeamDestroysTown = 44;
const int libCore_ge_AnnouncerVOEvents_RedTeamDestroysTown = 45;
const int libCore_ge_AnnouncerVOEvents_BlueTeamDestroysKeep = 46;
const int libCore_ge_AnnouncerVOEvents_RedTeamDestroysKeep = 47;
const int libCore_ge_AnnouncerVOEvents_AlliedCoreUnderAttack = 48;
const int libCore_ge_AnnouncerVOEvents_BlueTeamCoreUnderAttack = 49;
const int libCore_ge_AnnouncerVOEvents_RedTeamCoreUnderAttack = 50;
const int libCore_ge_AnnouncerVOEvents_Victory = 51;
const int libCore_ge_AnnouncerVOEvents_Defeat = 52;
const int libCore_ge_AnnouncerVOEvents_BlueTeamWins = 53;
const int libCore_ge_AnnouncerVOEvents_RedTeamWins = 54;
const int libCore_ge_AnnouncerVOEvents_LegendaryEventStart = 55;
const int libCore_ge_AnnouncerVOEvents_LegendaryEventEnd = 56;
const int libCore_ge_AnnouncerVOEvents_AlliesCaptureMercCamp = 57;
const int libCore_ge_AnnouncerVOEvents_EnemiesCaptureMercCamp = 58;
const int libCore_ge_AnnouncerVOEvents_BlueTeamCapturesMercCamp = 59;
const int libCore_ge_AnnouncerVOEvents_RedTeamCapturesMercCamp = 60;
const int libCore_ge_AnnouncerVOEvents_LevelUp = 61;
const int libCore_ge_AnnouncerVOEvents_TalentUnlocked = 62;
const int libCore_ge_AnnouncerVOEvents_EventCount = 63;
const int libCore_ge_AnnouncerVOEvents_GamePaused = 64;
const int libCore_ge_AnnouncerVOEvents_GameResumed = 65;
const int libCore_ge_AnnouncerVOEvents_MVP = 66;
const int libCore_ge_AnnouncerVOEvents_MVPVoteEpic = 67;
const int libCore_ge_AnnouncerVOEvents_MVPVoteLegendary = 68;
string libCore_ge_AnnouncerVOEvents_Ident (int lp_val);
const int libCore_ge_HeroTalentType_None = 0;
const int libCore_ge_HeroTalentType_Basic = 1;
const int libCore_ge_HeroTalentType_Trait = 2;
const int libCore_ge_HeroTalentType_Heroic = 3;
const int libCore_ge_HeroTalentType_Active = 4;
const int libCore_ge_HeroTalentType_Passive = 5;
const int libCore_ge_HeroVOEvents_Null = 0;
const int libCore_ge_HeroVOEvents_Revive = 1;
const int libCore_ge_HeroVOEvents_Healed = 2;
const int libCore_ge_HeroVOEvents_Resurrected = 3;
const int libCore_ge_HeroVOEvents_Pissed = 4;
const int libCore_ge_HeroVOEvents_GenericKill = 5;
const int libCore_ge_HeroVOEvents_TeamKilled = 6;
const int libCore_ge_HeroVOEvents_Laugh = 7;
const int libCore_ge_HeroVOEvents_No = 8;
const int libCore_ge_HeroVOEvents_EndEnemyKillingSpree = 9;
const int libCore_ge_HeroVOEvents_TalentChosen = 10;
const int libCore_ge_HeroVOEvents_Celebrate = 11;
const int libCore_ge_HeroVOEvents_WorthIt = 12;
const int libCore_ge_HeroVOEvents_Comeback = 13;
const int libCore_ge_HeroVOEvents_AIRetreat = 14;
const int libCore_ge_HeroVOEvents_AIGoodJob = 15;
const int libCore_ge_HeroVOEvents_AIOnMyWay = 16;
const int libCore_ge_HeroVOEvents_AIMercCapture = 17;
const int libCore_ge_HeroVOEvents_AICaution = 18;
const int libCore_ge_HeroVOEvents_AIAttack = 19;
const int libCore_ge_HeroVOEvents_AIUhOh = 20;
const int libCore_ge_HeroVOEvents_AIHeal = 21;
const int libCore_ge_HeroVOEvents_PingAttackHere = 22;
const int libCore_ge_HeroVOEvents_PingDefendHere = 23;
const int libCore_ge_HeroVOEvents_PingAttackTown = 24;
const int libCore_ge_HeroVOEvents_PingDefendTown = 25;
const int libCore_ge_HeroVOEvents_PingAttackWatchTower = 26;
const int libCore_ge_HeroVOEvents_PingDefendWatchTower = 27;
const int libCore_ge_HeroVOEvents_PingAttackCore = 28;
const int libCore_ge_HeroVOEvents_PingDefendCore = 29;
const int libCore_ge_HeroVOEvents_PingAttackMercCamp = 30;
const int libCore_ge_HeroVOEvents_PingKillHero = 31;
const int libCore_ge_HeroVOEvents_PingAssistHero = 32;
const int libCore_ge_HeroVOEvents_PingAssistMe = 33;
const int libCore_ge_HeroVOEvents_IntroQuestion = 34;
const int libCore_ge_HeroVOEvents_IntroResponse = 35;
const int libCore_ge_HeroVOEvents_IntroBoast = 36;
const int libCore_ge_HeroVOEvents_IntroAgree = 37;
const int libCore_ge_HeroVOEvents_VOXGetHit = 38;
const int libCore_ge_HeroVOEvents_VOXGetHitLarge = 39;
const int libCore_ge_HeroVOEvents_VOXGetHitSmall = 40;
const int libCore_ge_HeroVOEvents_Hello = 41;
const int libCore_ge_HeroVOEvents_Thanks = 42;
const int libCore_ge_HeroVOEvents_WellPlayed = 43;
const int libCore_ge_HeroVOEvents_Sorry = 44;
const int libCore_ge_HeroVOEvents_Goodbye = 45;
const int libCore_ge_HeroVOEvents_Cheer = 46;
const int libCore_ge_HeroVOEvents_GlueTrial = 47;
const int libCore_ge_HeroVOEvents_VOPing_AssistMe = 48;
const int libCore_ge_HeroVOEvents_VOPing_Danger = 49;
const int libCore_ge_HeroVOEvents_VOPing_Defend = 50;
const int libCore_ge_HeroVOEvents_VOPing_EnemyMissing = 51;
const int libCore_ge_HeroVOEvents_VOPing_OnMyWay = 52;
const int libCore_ge_HeroVOEvents_VOPing_Retreat = 53;
const int libCore_ge_MinionType_Null = 0;
const int libCore_ge_MinionType_Footmen = 1;
const int libCore_ge_MinionType_Wizard = 2;
const int libCore_ge_MinionType_Ranged = 3;
const int libCore_ge_MinionType_Catapult = 4;
const int libCore_ge_SegregationTriggerTypes_DefenderAIIssueOrdersToCreep = 0;
const int libCore_ge_SegregationTriggerTypes_HeroAIInitializeHeroTierData = 1;
const int libCore_ge_SegregationTriggerTypes_HeroAIInitAbilities = 2;
const int libCore_ge_SegregationTriggerTypes_HeroAIEnableAIForPlayer = 3;
const int libCore_ge_SegregationTriggerTypes_HeroAIDebuggingUpdateStatus = 4;
const int libCore_ge_SegregationTriggerTypes_HeroAIMapMechanicPinged = 5;
const int libCore_ge_SegregationTriggerTypes_HeroAIFollowerNearbyMapObjective = 6;
const int libCore_ge_SegregationTriggerTypes_HeroAITalentLogic = 7;
string libCore_ge_SegregationTriggerTypes_Ident (int lp_val);
const int libCore_ge_DataUnitHistoryDataType_Ability = 0;
const int libCore_ge_DataUnitHistoryDataType_Behavior = 1;
const int libCore_ge_DataUnitHistoryDataType_Button = 2;
const int libCore_ge_DataUnitHistoryDataType_Effect = 3;
const int libCore_ge_DataUnitHistoryDataType_Unit = 4;
const int libCore_ge_MuteType_ChatMessages = 0;
const int libCore_ge_MuteType_Pings = 1;
const int libCore_ge_MuteType_Announcements = 2;
const int libCore_ge_PlayerGroupOperation_And = 0;
const int libCore_ge_PlayerGroupOperation_Nand = 1;
const int libCore_ge_PlayerGroupOperation_Or = 2;
const int libCore_ge_PlayerGroupOperation_Xor = 3;
const int libCore_ge_PlayerGroupOperation_Nor = 4;
const int libCore_ge_PlayerGroupOperation_Subtract = 5;
const int libCore_ge_StormDamagingEffectType_Any = 0;
const int libCore_ge_StormDamagingEffectType_Physical = 1;
const int libCore_ge_StormDamagingEffectType_Spell = 2;
const int libCore_ge_StormDamagingEffectType_Pure = 3;
string libCore_ge_StormDamagingEffectType_Ident (int lp_val);
const int libCore_ge_UserRecordValueType_None = 0;
const int libCore_ge_UserRecordValueType_Integer = 1;
const int libCore_ge_UserRecordValueType_Real = 2;
const int libCore_ge_UserRecordValueType_Boolean = 3;
const int libCore_ge_UserRecordValueType_PathDisplay = 4;
const int libCore_ge_UserRecordValueType_TalentIndex = 5;
const int libCore_ge_UserRecordValueType_TokenCounterInstanceIndex = 6;
const int libCore_ge_UserRecordValueType_TokenCounterBehaviorIndex = 7;
const int libCore_ge_UserRecordValueType_DialogItem = 8;
const int libCore_ge_UserRecordValueType_EffectSourceButtonIndex = 9;
string libCore_ge_UserRecordValueType_Ident (int lp_val);
const int libCore_ge__UnitDataType_Actor = 0;
const int libCore_ge__UnitDataType_Integer = 1;
const int libCore_ge__UnitDataType_Ping = 2;
const int libCore_ge__UnitDataType_Point = 3;
const int libCore_ge__UnitDataType_Region = 4;
const int libCore_ge__UnitDataType_TextTag = 5;
const int libCore_ge__UnitDataType_Unit = 6;
const int libCore_ge__UnitDataType_UnitGroup = 7;

// Constants
const int libCore_gv_maxMapSoundtracks_C = 3;
const int libCore_gv_cOMPUTER_TeamChaos = 12;
const int libCore_gv_cOMPUTER_TeamOrder = 11;
const int libCore_gv_cOMPUTER_Hostile = 15;
const int libCore_gv_cOMPUTER_Neutral = 0;
const int libCore_gv_oBSERVER_ObserverUIPlayer = 13;
const int libCore_gv_lOCAL_Player = 1;
const string libCore_gv_lOCAL_Handle = "LocalPlayer";
const int libCore_gv_abilityDataMaxAbilityCount = 256;
const int libCore_gv_dataAnnouncerVOMaxAnnouncerPackCount = 32;
const int libCore_gv_dataAnnouncerVOMaxNumberOfAnnouncerEvents = 80;
const int libCore_gv_cOLOROrderPlayerColor = 0;
const int libCore_gv_cOLORChaosPlayerColor = 14;
const int libCore_gv_cOLORHostilePlayerColor = 1;
const int libCore_gv_cOLORNeutralPlayerColor = 5;
const string libCore_gv_debugPathDebugOutput = "Debug_Output";
const string libCore_gv_debugPathScoreValueLog = "ScoreValueLog";
const string libCore_gv_debugPathEncouragementDataTrackingLog = "EncouragementDataLog";
const int libCore_gv_debugMatchResultMessageType = 16;
const fixed libCore_gv_bALHeroSelectTime = 120.0;
const fixed libCore_gv_bALOpenTheGatesDelay = 35.0;
const fixed libCore_gv_bALSpawnMinionsDelay = 0.0;
const fixed libCore_gv_bALJungleTryMeCampActivationDelay = 10.0;
const fixed libCore_gv_bALJungleCreepCampActivationDelay = 60.0;
const fixed libCore_gv_bALJungleBossCampActivationDelay = 300.0;
const fixed libCore_gv_bALJungleWatchTowerActivationDelay = 5.0;
const fixed libCore_gv_bALXPTrickleStartDelay = 30.0;
const int libCore_gv_data_MaxHeroAllowedMountCategories_C = 8;
const int libCore_gv_data_MaxHeroAllowedUserDataSkinCount_C = 6;
const int libCore_gv_dataHeroesMaxAllowedSkinCount_C = 256;
const int libCore_gv_dataHeroesMaxHeroCount = 32;
const int libCore_gv_dataHeroesNumberOfPairedHeroesPerHero = 2;
const int libCore_gv_dataHeroesMaxAlternateHeroes = 3;
const int libCore_gv_dataHeroesMaxAbilitiesPerHero = 16;
const int libCore_gv_dataHeroesNumberOfBasicAbilitiesPerHero = 3;
const int libCore_gv_dataHeroesNumberOfBasicAbilitiyVariationsPerAbility = 4;
const int libCore_gv_dataHeroesNumberOfHeroicAbilitiesPerHero = 3;
const int libCore_gv_dataHeroesMaxTalentTiers = 7;
const int libCore_gv_dataHeroesMaxTalentsPerTier = 7;
const int libCore_gv_dataHeroesMaxTalentChoicePerTier = 5;
const int libCore_gv_dataHeroesMaxTalentBehaviorsPerTalent = 5;
const int libCore_gv_dataHeroVOMaxNumberOfHeroVOEvents = 49;
const int libCore_gv_killingSpree_KillThresholdCount_C = 4;
const int libCore_gv_killingSpree_KillThresholdBase_C = 5;
const int libCore_gv_killingSpree_KillThresholdUpgrade1_C = 10;
const int libCore_gv_killingSpree_KillThresholdUpgrade2_C = 15;
const int libCore_gv_killingSpree_KillThresholdUpgrade3_C = 20;
const int libCore_gv_mapCountMax = 32;
const int libCore_gv_mapMechanicAbilityMaxCount = 3;
const int libCore_gv_dataMinionWaveCompositionMaxGroupCount = 4;
const int libCore_gv_dataMountsMaxMountCount = 256;
const int libCore_gv_dataMountsMaxMountVariationCount = 10;
const int libCore_gv_bALMaxTeams = 2;
const int libCore_gv_bALMaxPlayers = 10;
const int libCore_gv_bALMaxPlayersOnATeam = 5;
const int libCore_gv_bALMaxEnginePlayerCount = 15;
const int libCore_gv_bALMaxLevel = 30;
const fixed libCore_gv_bALXPRadius = 12.75;
const fixed libCore_gv_bALHeroKillXPRadius = 20.0;
const int libCore_gv_bALPlayerTotalInventorySlots = 6;
const int libCore_gv_bALPlayerTotalAbilitySlots = 15;
const fixed libCore_gv_bALMinDeathTime = 5.0;
const int libCore_gv_dataScalingMaxScalingTicks = 30;
const int libCore_gv_segregationTriggerTypesMax = 20;
const int libCore_gv_segregationTriggerCountPerType = 20;
const int libCore_gv_dataSkinsMaxSkinCount = 256;
const int libCore_gv_dataSkinsMaxFeatureCount = 5;
const int libCore_gv_dataSkinsMaxSkinVariationCount = 10;
const int libCore_gv_talents_MaxTalentEntryCount_C = 1024;
const int libCore_gv_talents_MaxPrepickedTalentProfiles_C = 3;
const int libCore_gv_talents_CatalogLinkReplacementMax_C = 20;
const int libCore_gv_talents_MaxItemEntryCount_C = 3;
const int libCore_gv_tokenCounterDataDEBUGUnlimitedAmount = 5;
const int libCore_gv_tokenMaxCount = 256;
const int libCore_gv_tokenConditionalEventsMaxCount = 5;
const int libCore_gv_tokenDeltaEventsMaxCount = 5;
const int libCore_gv_dataUnitHistoryDataMaxEntryCount = 4096;
const int libCore_gv_dataUnitHistoryDataTypeMax = 4;
const fixed libCore_gv_data_WatchTower_CaptureTime_C = 1.5;
const fixed libCore_gv_data_WatchTower_CaptureRadius_C = 4.0;
const fixed libCore_gv_data_XP_TricklePeriod_C = 1.0;
const fixed libCore_gv_data_XP_TrickleAmount_C = 23.0;
const fixed libCore_gv_data_XP_SiegeGiantCapture_C = 0.0;
const fixed libCore_gv_data_XP_GraveGolemCapture_C = 0.0;
const fixed libCore_gv_data_XP_OgreCapture_C = 0.0;
const fixed libCore_gv_data_XP_ColossusCapture_C = 500.0;
const fixed libCore_gv_data_XP_SlaynElementalCapture_C = 750.0;
const fixed libCore_gv_data_XP_VanguardCapture_C = 150.0;
const fixed libCore_gv_data_XP_HybridCapture_C = 350.0;
const fixed libCore_gv_data_XP_SharedValueMultiplier_C = 1.0;
const fixed libCore_gv_data_XP_HeroValuePerLevel_C = 50.0;
const int libCore_gv_data_XP_HeroLevelModifier_C = 5;
const fixed libCore_gv_data_XP_Hero1LevelGapMultiplier_C = 0.15;
const fixed libCore_gv_data_XP_Hero2LevelGapMultiplier_C = 0.3;
const fixed libCore_gv_data_XP_Hero3LevelGapMultiplier_C = 0.45;
const fixed libCore_gv_data_XP_Hero4LevelGapMultiplier_C = 0.6;
const fixed libCore_gv_data_XP_Hero5LevelGapMultiplier_C = 1.0;
const fixed libCore_gv_data_XP_HeroOneQuarterValueCoefficient_C = 0.25;
const fixed libCore_gv_data_XP_HeroHalfValueCoefficient_C = 0.5;
const fixed libCore_gv_data_XP_HeroThreeQuarterValueCoefficient_C = 0.75;
const int libCore_gv_maxBehaviorStacks = 65535;
const fixed libCore_gv_behaviorInfinityDuration = 32767.0;
const int libCore_gv_loadoutNewItemReleaseDateMonthThreshold = 3;

// Structures
struct libCore_gs_AbilityData {
    int lv_variationNumber;
    bool lv_flag_AffectedByCooldownReduction;
    bool lv_flag_CooldownPerUnit;
    bool lv_flag_MountReplacement;
    bool lv_flag_ShowInHeroSelection;
    bool lv_flag_UsesCharges;
    string lv_abilityLink;
    string lv_abilityButtonLink;
    string lv_abilityInventoryUnit;
    int lv_abilityCooldownLocation;
    text lv_abilityName;
    text lv_abilitySimpleText;
    text lv_abilityTooltipText;
    string lv_abilityIcon;
    text lv_abilityHotkey;
    text lv_abilityInfoText;
    string lv_paired;
    string lv_slot;
    string lv_type;
};

struct libCore_gs_AnnouncerVOData {
    string lv_soundLink;
    bool lv_playAtGameEnd;
};

struct libCore_gs_AnnouncerVOPack {
    string lv_iDPersonal;
    text lv_name;
    text lv_description;
    text lv_searchText;
    string lv_event;
    string lv_skinEntry;
    string lv_collectionCategory;
    datetime lv_releaseDate;
    bool lv_isNew;
    bool lv_previewHidden;
    string lv_previewImage;
    string lv_previewSound;
};

struct libCore_gs_HeroData {
    string lv_heroID;
    string lv_heroInstance;
    string lv_heroUnitType;
    string[libCore_gv_dataHeroesMaxAlternateHeroes + 1] lv_heroUnitTypeAlternate;
    string lv_heroLevelScalingEffect;
    int lv_numberOfAlternateHeroUnitTypes;
    string lv_role;
    string lv_universe;
    string lv_universeIcon;
    text lv_description;
    string lv_func_HeroIncrement;
    string lv_func_HeroDecrement;
    bool lv_isFlyer;
    bool lv_isPaired;
    bool lv_usesMount;
    string[libCore_gv_dataHeroesNumberOfPairedHeroesPerHero + 1] lv_portraitPaired;
    string lv_portraitHeroSelectScreenButton;
    string lv_portraitHeroSelectScreenDraft;
    string lv_portraitDeathRecap;
    string lv_portraitPartyFrame;
    int[libCore_gv_dataHeroesMaxAllowedSkinCount_C + 1] lv_skinArray;
    int lv_skinCount;
    int lv_allowedMountCategoryCount;
    string[libCore_gv_data_MaxHeroAllowedMountCategories_C + 1] lv_allowedMountCategories;
    int[libCore_gv_dataMountsMaxMountCount + 1] lv_mountArray;
    int lv_mountCount;
    fixed lv_mountScaling;
    int lv_defaultMount;
    int[libCore_gv_dataHeroesMaxTalentTiers + 1] lv_talentCountPerTier;
    int[libCore_gv_dataHeroesMaxTalentTiers + 1][libCore_gv_dataHeroesMaxTalentsPerTier + 1] lv_talentIndex;
    int lv_talentHeroicTier;
    int[libCore_gv_dataHeroesMaxTalentTiers + 1] lv_talentTierLevel;
    int[libCore_gv_dataHeroesMaxAbilitiesPerHero + 1] lv_abilityIndex;
    int lv_abilitiesCount;
    text lv_name;
    text[libCore_gv_dataHeroesNumberOfPairedHeroesPerHero + 1] lv_namePaired;
    text lv_storeName;
    text lv_storeNamePaired;
    string lv_questDataTokenCounterInstance;
    text lv_questDataName;
    text[libCore_gv_bALMaxEnginePlayerCount + 1] lv_questDataTooltipText;
    string lv_questDataIcon;
    string lv_vOArrayUserData;
};

struct libCore_gs_HeroVO {
    string[libCore_gv_dataHeroVOMaxNumberOfHeroVOEvents + 1] lv_vOEventLines;
    string[libCore_gv_dataHeroesMaxHeroCount + 1] lv_specificHeroTakedownLines;
    string[libCore_gv_dataHeroesMaxHeroCount + 1] lv_specificHeroIntroQuestionLines;
    string[libCore_gv_dataHeroesMaxHeroCount + 1] lv_specificHeroIntroResponseLines;
};

struct libCore_gs_MapData {
    int lv_map;
    text lv_mapName;
    string lv_offlinePath;
    string lv_backgroundImage;
    string[libCore_gv_maxMapSoundtracks_C + 1] lv_soundtrack;
    string lv_mapSelectionSoundtrack;
    int lv_gameMode;
    int lv_gameMutator;
    string[libCore_gv_bALMaxTeams + 1] lv_mapAnnouncer;
    string[libCore_gv_mapMechanicAbilityMaxCount + 1] lv_mapMechanicAbility;
    int lv_tileset;
};

struct libCore_gs_MinionWaveComposition {
    string[libCore_gv_dataMinionWaveCompositionMaxGroupCount + 1] lv_minionUnitType;
    int[libCore_gv_dataMinionWaveCompositionMaxGroupCount + 1] lv_groupMinionType;
    int[libCore_gv_dataMinionWaveCompositionMaxGroupCount + 1] lv_groupMinionCount;
};

struct libCore_gs_MountData {
    string lv_mountID;
    string lv_mountIDPersonal;
    int lv_mountVariation;
    bool lv_isMorphMount;
    bool lv_showInStore;
    bool lv_attachedMountModel;
    text lv_mountName;
    text lv_mountAdditionalSearchTextWord;
    text lv_mountInfo;
    string lv_collectionCategory;
    string lv_mountCategory;
    datetime lv_releaseDate;
    bool lv_isNew;
    string lv_creationActorMessageMacro;
    string lv_mountModel;
    fixed lv_mountModelScale;
    fixed lv_mountModelWalkAnimMoveSpeed;
    string lv_mountPoseAnimGroup;
    string lv_mountPoseAnimGroupStatus;
    string lv_mountUpFXActor;
    string lv_dismountFXActor;
    string lv_vOMountSound;
    string lv_vODismountSound;
    string lv_vOLoopingSound;
    string lv_vOMovingSound;
    string lv_vOStationarySound;
    string lv_vOMoveStartSound;
    string lv_vOMoveStopSound;
    string lv_vOTurboSound;
    string lv_event;
    string lv_previewCutsceneFile;
    string lv_tileCutsceneFile;
    string lv_miniPortraitCutsceneFile;
    string lv_heroSelectCutsceneFile;
    string lv_lootChestRewardCutsceneFile;
};

struct libCore_gs_SkinData {
    string lv_skinID;
    string lv_skinIDPersonal;
    int lv_skinVariationNumber;
    text lv_name;
    text lv_info;
    text lv_additionalSearchText;
    string[libCore_gv_dataSkinsMaxFeatureCount + 1] lv_featureArray;
    int lv_featureArrayCount;
    string lv_vODefinition;
    string lv_skinLink;
    string lv_upgradeLink;
    datetime lv_releaseDate;
    bool lv_isNew;
    int lv_defaultMount;
    string lv_mountCategory;
    string lv_event;
    string lv_heroSelectCutscene;
    string lv_scoreScreenCutscene;
    string lv_miniPortraitCutscene;
    string lv_previewCutscene;
    string lv_draftCutscene;
    string lv_draftPickCutscene;
    string lv_endOfMatchCutscene;
    string lv_tileCutscene;
    string lv_lootChestRewardCutscene;
};

struct libCore_gs_TalentData {
    string lv_talentInstance;
    int lv_abilityIndex;
    string lv_talentType;
    string lv_talentLink;
    int lv_prerequisiteTalentIndex;
    string lv_buttonEntry;
    text lv_buttonName;
    text lv_buttonSimpleText;
    text lv_buttonInfoText;
    text[libCore_gv_bALMaxEnginePlayerCount + 1] lv_buttonTooltipText;
    string lv_buttonIcon;
    text lv_buttonHotkey;
    bool[libCore_gv_talents_CatalogLinkReplacementMax_C + 1] lv_catalogLinkReplacementUsed;
    int[libCore_gv_talents_CatalogLinkReplacementMax_C + 1] lv_catalogLinkReplacementType;
    string[libCore_gv_talents_CatalogLinkReplacementMax_C + 1] lv_catalogLinkReplacementTo;
    string[libCore_gv_talents_CatalogLinkReplacementMax_C + 1] lv_catalogLinkReplacementFrom;
    string[libCore_gv_dataHeroesMaxTalentBehaviorsPerTalent + 1] lv_behavior;
    string lv_effectModification;
    string[libCore_gv_talents_MaxItemEntryCount_C + 1] lv_item;
    string lv_questDataTokenCounterInstance;
};

struct libCore_gs_TokenCounterData {
    string lv_behaviorTokenCounter;
    bool lv_optionResetAtMax;
    bool lv_optionSuppressQuestCompleteCheat;
    fixed lv_maxAmount;
    fixed lv_targetAmount;
    string lv_type;
    bool lv_isQuest;
    string lv_scoreValueLink;
    string lv_eventsIncreaseEffect;
    string lv_eventsIncreaseQuestEvent;
    string lv_eventsDecreaseEffect;
    string lv_eventsDecreaseQuestEvent;
    string lv_eventsAtMaxEffect;
    string lv_eventsAtMaxQuestEvent;
    string lv_eventsAtMinEffect;
    string lv_eventsAtMinQuestEvent;
    int lv_deltaEventsCount;
    int[libCore_gv_tokenDeltaEventsMaxCount + 1] lv_deltaEventsDelta;
    string[libCore_gv_tokenDeltaEventsMaxCount + 1] lv_deltaEventsEffect;
    string[libCore_gv_tokenDeltaEventsMaxCount + 1] lv_deltaEventsQuestEvent;
    int lv_conditionalEventsCount;
    int[libCore_gv_tokenConditionalEventsMaxCount + 1] lv_conditionalEventsCompareValue;
    string[libCore_gv_tokenConditionalEventsMaxCount + 1] lv_conditionalEventsEffect;
    string[libCore_gv_tokenConditionalEventsMaxCount + 1] lv_conditionalEventsQuestEvent;
};

struct libCore_gs_DataUnitHistoryData {
    string[libCore_gv_dataUnitHistoryDataMaxEntryCount + 1] lv_dataUnitHistoryData;
};

// Variable Declarations
bool libCore_gv_dEBUGDebuggingEnabled;
bool libCore_gv_dEBUGPingLimitEnabled;
bool libCore_gv_sYSTowerAI;
bool libCore_gv_sYSMinionAI;
bool libCore_gv_sYSJungleWatchTowers;
bool libCore_gv_sYSTowns;
bool libCore_gv_sYSEventsEnabled;
bool libCore_gv_sYSStartGame;
bool libCore_gv_sYSJungleCreepCamps;
bool libCore_gv_sYSCustomMinionsEnabled;
bool libCore_gv_sYSCustomRunAnimationsEnabled;
int libCore_gv_sYSHeroStartLevel;
bool libCore_gv_sYSXPOn;
bool libCore_gv_sYSIsDebug;
bool libCore_gv_sYSXPTrickleEnabled;
int libCore_gv_sYSMapIndex;
int libCore_gv_sYSGameMode;
int libCore_gv_sYSGameMutator;
bool libCore_gv_sYSPreloadingEnabled;
bool libCore_gv_sYSIsBrawl;
bool libCore_gv_sYSIsSandbox;
bool libCore_gv_sYSIsSameHeroEnabled;
bool libCore_gv_sYSIsGlue;
bool libCore_gv_sYSForceManualMapLaunch;
bool libCore_gv_sYSMapIndexHasBeenForced;
trigger libCore_gv_sYSInitializeSystemFlagsCallback;
bool libCore_gv_dEBUGErrorDuringInitialization;
bool libCore_gv_gameOver;
bool libCore_gv_gameStarted;
string libCore_gv_mAPMapStringID;
point[libCore_gv_bALMaxTeams + 1][libCore_gv_bALMaxPlayersOnATeam + 1] libCore_gv_mAPStartPoints;
string libCore_gv_mAPMapLight;
string libCore_gv_mAPBackgroundImage;
string[libCore_gv_maxMapSoundtracks_C + 1] libCore_gv_mAPMapSoundtrack;
string[libCore_gv_bALMaxTeams + 1] libCore_gv_mAPMapAnnouncer;
bool libCore_gv_mAPUsesCirclingAI;
int libCore_gv_mAPPathNodesBeforeLooping;
unit libCore_gv_mAPNeutralHeroUnit;
unit libCore_gv_mAPHostileHeroUnit;
unit libCore_gv_mAPUserRecordUnit;
int libCore_gv_mAPTileset;
int libCore_gv_mAPMap;
playergroup libCore_gv_allPlayersStorm;
playergroup libCore_gv_allHeroPlayers;
playergroup libCore_gv_allHeroPlayersPlusObservers;
playergroup libCore_gv_observerPlayers;
playergroup libCore_gv_teamOrder;
playergroup libCore_gv_teamChaos;
playergroup libCore_gv_activeHumanPlayers;
playergroup libCore_gv_nPCPlayers;
playergroup[libCore_gv_bALMaxEnginePlayerCount + 1] libCore_gv_playerGroupFromPlayer;
string libCore_gv_cONFIGDefaultAnnouncer;
string libCore_gv_cONFIGDefaultMount;
int libCore_gv_abilityDataNumberOfAbilities;
libCore_gs_AbilityData[libCore_gv_abilityDataMaxAbilityCount + 1] libCore_gv_abilityData;
int libCore_gv_dataAnnouncerVONumberOfAnnouncerPacks;
libCore_gs_AnnouncerVOData[libCore_gv_dataAnnouncerVOMaxNumberOfAnnouncerEvents + 1] libCore_gv_dataAnnouncerVOData;
libCore_gs_AnnouncerVOPack[libCore_gv_dataAnnouncerVOMaxAnnouncerPackCount + 1] libCore_gv_dataAnnouncerVOPacks;
color libCore_gv_cOLORPlayerColor;
color libCore_gv_cOLORAllyColor;
color libCore_gv_cOLOREnemyColor;
color libCore_gv_cOLORNeutralColor;
color libCore_gv_cOLORJungleCreepColor;
unitfilter libCore_gv_filtersAlly;
unitfilter libCore_gv_filtersEnemy;
unitfilter libCore_gv_filtersVisible;
unitfilter libCore_gv_filtersNoMinionAggro;
unitfilter libCore_gv_filtersIgnoredByTargetingAI;
unitfilter libCore_gv_filtersHeroic;
unitfilter libCore_gv_filtersHeroicjustexcludingCloakedandDead;
unitfilter libCore_gv_filtersHeroicjustexcludingMissile;
unitfilter libCore_gv_filtersHeroicjustexcludingHallucination;
unitfilter libCore_gv_filtersHeroicAlly;
unitfilter libCore_gv_filtersHeroicAllyandnotHallucination;
unitfilter libCore_gv_filtersHeroicAllyandnotImmuneToFriendlyAbilitiesorBenign;
unitfilter libCore_gv_filtersHeroicAllyorPlayer;
unitfilter libCore_gv_filtersHeroicAllyandnotHallucinationHoverorBenign;
unitfilter libCore_gv_filtersHeroicAllyorPlayerandnotHallucinationorBenign;
unitfilter libCore_gv_filtersHeroicAllyorPlayerandnotHover;
unitfilter libCore_gv_filtersHeroicAllyorPlayerandnotHoverorStasis;
unitfilter libCore_gv_filtersHeroicAllyorPlayerandnotStasis;
unitfilter libCore_gv_filtersHeroicEnemy;
unitfilter libCore_gv_filtersHeroicEnemyorNeutral;
unitfilter libCore_gv_filtersHeroicEnemyandnotHallucination;
unitfilter libCore_gv_filtersHeroicandnotBenign;
unitfilter libCore_gv_filtersHeroicandnotBenignInvulnerableorStasis;
unitfilter libCore_gv_filtersHeroicandnotCloaked;
unitfilter libCore_gv_filtersHeroicandnotHallucination;
unitfilter libCore_gv_filtersHeroicandnotInvulnerable;
unitfilter libCore_gv_filtersHeroicandnotInvulnerableorStasis;
unitfilter libCore_gv_filtersHeroicandnotPlayer;
unitfilter libCore_gv_filtersHeroicandnotStasis;
unitfilter libCore_gv_filtersMinionsAllLaners;
unitfilter libCore_gv_filtersMinionsTownMinions;
unitfilter libCore_gv_filtersMercLaner;
unitfilter libCore_gv_filtersMercDefender;
unitfilter libCore_gv_filtersMapBosses;
unitfilter libCore_gv_filtersMapCreatures;
unitfilter libCore_gv_filtersStructure;
unitfilter libCore_gv_filtersSummoned;
int libCore_gv_dataHeroesNumberOfHeroes;
libCore_gs_HeroData[libCore_gv_dataHeroesMaxHeroCount + 1] libCore_gv_dataHeroesHeroData;
string[libCore_gv_dataHeroVOMaxNumberOfHeroVOEvents + 1] libCore_gv_dataHeroVODataFieldMap;
libCore_gs_HeroVO[libCore_gv_dataHeroesMaxHeroCount + 1] libCore_gv_dataHeroVO;
libCore_gs_MapData[libCore_gv_mapCountMax + 1] libCore_gv_mapData;
int libCore_gv_mapDataTotalMapCount;
fixed libCore_gv_bALMinionWaveInterval;
fixed[libCore_gv_bALMaxTeams + 1] libCore_gv_bALMinionTeamSpawnDelay;
libCore_gs_MinionWaveComposition[libCore_gv_bALMaxTeams + 1] libCore_gv_dataMinionWaveComposition;
int libCore_gv_dataMountsMountCount;
libCore_gs_MountData[libCore_gv_dataMountsMaxMountCount + 1] libCore_gv_dataMountsMountData;
fixed libCore_gv_bALCancelDelay;
fixed libCore_gv_bALHeroKillCreditTimeWindow;
fixed[libCore_gv_bALMaxLevel + 1] libCore_gv_bALDeathTimes;
fixed libCore_gv_bALMaxDeathTime;
fixed libCore_gv_bALDeathTimeOverride;
fixed libCore_gv_bALDeathTimeScaler;
trigger[libCore_gv_segregationTriggerTypesMax + 1][libCore_gv_segregationTriggerCountPerType + 1] libCore_gv_segregationTriggers;
int libCore_gv_segTriggerPlayer;
unit libCore_gv_segTriggerUnit;
point libCore_gv_segTriggerPoint;
int libCore_gv_segTriggerIndex;
int libCore_gv_dataSkinsSkinCount;
libCore_gs_SkinData[libCore_gv_dataSkinsMaxSkinCount + 1] libCore_gv_dataSkinsSkinData;
int libCore_gv_talents_TalentEntryCount;
libCore_gs_TalentData[libCore_gv_talents_MaxTalentEntryCount_C + 1] libCore_gv_talentData;
libCore_gs_TokenCounterData[libCore_gv_tokenMaxCount + 1] libCore_gv_tokenCounterData;
int libCore_gv_tokenCurrentCount;
int libCore_gv_dataUnitHistoryDataAbilitiesTotalCountInEDITOR;
int libCore_gv_dataUnitHistoryDataAbilitiesCurrentCountInEDITOR;
int libCore_gv_dataUnitHistoryDataBehaviorsTotalCountInEDITOR;
int libCore_gv_dataUnitHistoryDataBehaviorsCurrentCountInEDITOR;
int libCore_gv_dataUnitHistoryDataButtonsTotalCountInEDITOR;
int libCore_gv_dataUnitHistoryDataButtonsCurrentCountInEDITOR;
int libCore_gv_dataUnitHistoryDataEffectsTotalCountInEDITOR;
int libCore_gv_dataUnitHistoryDataEffectsCurrentCountInEDITOR;
int libCore_gv_dataUnitHistoryDataUnitsTotalCountInEDITOR;
int libCore_gv_dataUnitHistoryDataUnitsCurrentCountInEDITOR;
int libCore_gv_dataUnitHistoryDataCurrentEntryCountAbilities;
int libCore_gv_dataUnitHistoryDataCurrentEntryCountBehaviors;
int libCore_gv_dataUnitHistoryDataCurrentEntryCountButtons;
int libCore_gv_dataUnitHistoryDataCurrentEntryCountEffects;
int libCore_gv_dataUnitHistoryDataCurrentEntryCountUnits;
libCore_gs_DataUnitHistoryData[libCore_gv_dataUnitHistoryDataTypeMax + 1] libCore_gv_dataUnitHistoryData;
fixed[libCore_gv_bALMaxTeams + 1] libCore_gv_data_XP_HeroXPModifier;
bool libCore_gv_data_XP_GranularBountyXPMathDisplayEnabled;
fixed libCore_gv_data_XP_CatchUpXPPunishmentScaler;
fixed libCore_gv_data_XP_CatchUpXPBonusScaler;
fixed[libCore_gv_bALMaxTeams + 1] libCore_gv_data_XP_MinionXPModifier;
fixed[libCore_gv_bALMaxLevel + 1] libCore_gv_dataXPLevelXPValues;

// Function Declarations
void libCore_gf_MAPTilesetActivate (int lp_tileset);
int libCore_gf_CONFIGDefaultAnnouncerIndex ();
int libCore_gf_AbilityIndexOfAbility (string lp_abilityLink);
void libCore_gf_DataAnnouncerVOMapDataField (int lp_event, string lp_soundEntry, bool lp_playAtGameEnd);
void libCore_gf_DataInitializeAnnouncerVOPack (string lp_instance);
int libCore_gf_DataAnnouncersFindAnnouncerWithAnnouncerID (string lp_announcerID);
text libCore_gf_AbilityTalentHotkeyTextExpanded (string lp_slot);
void libCore_gf_DataInitializeHero (string lp_instance);
text libCore_gf_HeroDataHeroRoleName (int lp_heroIndex);
int libCore_gf_HeroDataAbilityVariationsCountPerSlotForHero (int lp_heroIndex, string lp_abilitySlot, bool lp_paired);
int libCore_gf_HeroDataAbilityIndexFromVariationNumberOfHero (int lp_heroIndex, string lp_abilitySlot, int lp_variation, bool lp_paired);
bool libCore_gf_HeroDataHeroHasQuest (int lp_heroIndex);
fixed libCore_gf_HeroDeathTime (int lp_player, int lp_level);
int libCore_gf_HeroIndexForUnitType (string lp_heroUnitType);
int libCore_gf_HeroIndexOfUnit (unit lp_hero);
int libCore_gf_HeroIndexOfPlayerHero (int lp_player);
string libCore_gf_HeroIDFromIndex (int lp_heroIndex);
int libCore_gf_DataHeroesDefaultSkinIndexOfHero (int lp_heroIndex);
int libCore_gf_DataHeroesDefaultMountIndexOfHero (int lp_heroIndex);
void libCore_gf_DataHeroVOMapDataField (int lp_event, string lp_arrayIndexName);
void libCore_gf_DataHeroVOReloadHeroVODataForHero (int lp_heroIndex);
text libCore_gf_MapDataGetMapName (int lp_mapIndex);
int libCore_gf_MapDataGetMapMapPreset (int lp_mapIndex);
int libCore_gf_MapDataGetMapMutatorPreset (int lp_mapIndex);
int libCore_gf_MapDataGetMapModePreset (int lp_mapIndex);
string libCore_gf_DataMinionUnitTypeFromPreset (int lp_type, int lp_team);
int libCore_gf_DataMinionTypeOfUnit (unit lp_unit);
bool libCore_gf_DataUnitGroupHasMinionType (int lp_minionType, unitgroup lp_unitGroup);
void libCore_gf_DataInitializeMinion (string lp_unitType, int lp_minionType, int lp_minionCount, int lp_team);
string libCore_gf_DataMountsMountCollectionCategory (int lp_mountIndex);
int libCore_gf_DataMountsFindMountWithMountID (string lp_moundID, int lp_variation);
int libCore_gf_DataMountsFindMountWithMountIDPersonal (string lp_mountIDPersonal);
void libCore_gf_DataMountsAddMountPlusVariationsToMountList (string lp_mountInstance);
void libCore_gf_RegisterSegregationTrigger (int lp_type, trigger lp_trigger);
void libCore_gf_CallRegisteredSegregationTriggers (int lp_type);
int libCore_gf_DataSkinsFindSkinWithSkinID (string lp_skinID, int lp_variation);
int libCore_gf_DataSkinsFindSkinWithSkinIDPersonal (string lp_skinIDPersonal);
void libCore_gf_DataSkinsAddSkinPlusVariationsToSkinList (string lp_skinInstance);
void libCore_gf_DataInitializeTalent (string lp_talentInstance);
bool libCore_gf_TalentDataTalentHasQuest (int lp_talentIndex);
int libCore_gf_TalentDataCatalogReplacementType (string lp_userDataCatalogType);
int libCore_gf_TokenTokenCounterIndex (string lp_behavior);
string libCore_gf_TokenGetBehavior (string lp_tokenCounterIndex);
void libCore_gf_TokenInitializeToken (string lp_tokenInstance);
void libCore_gf_DataUnitHistoryAddHistoryData (string lp_entry, int lp_type);
int libCore_gf_DataUnitHistoryDataMaxEntryOfType (int lp_type);
int libCore_gf_DataUnitHistoryDataGetIndexOfEntryType (int lp_type, string lp_entry);
string libCore_gf_DataUnitHistoryDataGetEntryOfIndexType (int lp_type, int lp_index);
int libCore_gf_DataXPLevelGapBetweenHeroes (int lp_awardPlayer, unit lp_deadUnit);
fixed libCore_gf_DataXPGetValueCoefficientForUnit (unit lp_deadUnit);
fixed libCore_gf_DataXPXPForHero2 (int lp_awardPlayer, unit lp_deadUnit);
fixed libCore_gf_DataXPXPForMinion (fixed lp_baseXPValue, int lp_awardPlayer, unit lp_deadUnit);
fixed libCore_gf_DataXPXPForHeroNEW (int lp_awardPlayer, unit lp_deadUnit);
fixed libCore_gf_DataXPGetMoreGranularBountyXPModifier (unit lp_deadHero, unit lp_playerHero);
color libCore_gf_GetAllianceColorFromGameUIData (string lp_overrideColor, int lp_player);
fixed libCore_gf_GetWeaponDamageForUnit (unit lp_unit);
string libCore_gf_GetTimeStamp (fixed lp_time);
point libCore_gf_AdvancePointinDirection (point lp_point, point lp_dir, fixed lp_distance);
point libCore_gf_ProjectPointOntoLine (point lp_p1, point lp_p2, point lp_t);
fixed libCore_gf_GetTotalXPForLevel (int lp_level);
void libCore_gf_WaitForConversationToFinish ();
bool libCore_gf_StormUnitIsHallucination (unit lp_unit);
void libCore_gf_StormMapToMapLoad (int lp_map, playergroup lp_victoryPlayers, playergroup lp_defeatPlayers);
bool libCore_gf_AbilityHasCategory (string lp_ability, string lp_category);
bool libCore_gf_IsAbilityOnCooldown (unit lp_unit, string lp_ability);
fixed libCore_gf_AbilityCooldownTimeForPlayer (unit lp_unit, string lp_ability, int lp_player);
void libCore_gf_SendActorMessageToDoodadsInRegion (string lp_message, string lp_doodadType, region lp_target);
bool libCore_gf_UnitHasBehaviorWithFlag (unit lp_unit, int lp_flag);
void libCore_gf_RunCustomCatalogChangesForPlayer (int lp_player, string lp_modifyPlayerEffect, int lp_times, bool lp_reset);
text libCore_gf_ConvertCatalogEntryToText (string lp_entry);
string libCore_gf_ConvertTextToString (text lp_text);
bool libCore_gf_CombatCheckCritState (unit lp_targetUnit, int lp_casterPlayer, string lp_effectEntry);
int libCore_gf_CombatDamageTypeFromEffect (string lp_effect);
fixed libCore_gf_CombatCalculateDamageAmount ();
void RemoveDataTableValueInstance (int lp_instance, string lp_name);
string libCore_gf_ConvertIntegerToStringDigit (int lp_integer, int lp_digit);
void CreateArray (string lp_arrayName);
int LengthofArray (string lp_arrayName);
void libCore_gf_LengthAdd (string lp_arrayName);
bool libCore_gf_ArrayKeyExists (string lp_arrayName, int lp_arrayKey);
int libCore_gf_TypeofArrayValue (string lp_arrayName, int lp_arrayKey);
void libCore_gf_CommonSet (string lp_arrayName, int lp_arrayIndex);
void libCore_gf_SetArrayValueInteger (string lp_arrayName, int lp_arrayIndex, int lp_arrayValue);
void libCore_gf_SetArrayValueReal (string lp_arrayName, int lp_arrayIndex, fixed lp_arrayValue);
void libCore_gf_SetArrayValueAbilityCommand (string lp_arrayName, int lp_arrayIndex, abilcmd lp_arrayValue);
void libCore_gf_SetArrayValueBoolean (string lp_arrayName, int lp_arrayIndex, bool lp_arrayValue);
void libCore_gf_SetArrayValueDialog (string lp_arrayName, int lp_arrayIndex, int lp_arrayValue);
void libCore_gf_SetArrayValueDialogItem (string lp_arrayName, int lp_arrayIndex, int lp_arrayValue);
void libCore_gf_SetArrayValuePoint (string lp_arrayName, int lp_arrayIndex, point lp_arrayValue);
void libCore_gf_SetArrayValueRegion (string lp_arrayName, int lp_arrayIndex, region lp_arrayValue);
void libCore_gf_SetArrayValueString (string lp_arrayName, int lp_arrayIndex, string lp_arrayValue);
void libCore_gf_SetArrayValueTrigger (string lp_arrayName, int lp_arrayIndex, trigger lp_arrayValue);
void libCore_gf_SetArrayValueUnit (string lp_arrayName, int lp_arrayIndex, unit lp_arrayValue);
void libCore_gf_SetArrayValueUnitGroup (string lp_arrayName, int lp_arrayIndex, unitgroup lp_arrayValue);
void libCore_gf_PushArrayValueInteger (string lp_arrayName, int lp_arrayValue);
void libCore_gf_PushArrayValueReal (string lp_arrayName, fixed lp_arrayValue);
void libCore_gf_PushArrayValueAbilityCommand (string lp_arrayName, abilcmd lp_arrayValue);
void libCore_gf_PushArrayValueBoolean (string lp_arrayName, bool lp_arrayValue);
void libCore_gf_PushArrayValueDialog (string lp_arrayName, int lp_arrayValue);
void libCore_gf_PushArrayValueDialogItem (string lp_arrayName, int lp_arrayValue);
void libCore_gf_PushArrayValuePoint (string lp_arrayName, point lp_arrayValue);
void libCore_gf_PushArrayValueRegion (string lp_arrayName, region lp_arrayValue);
void libCore_gf_PushArrayValueString (string lp_arrayName, string lp_arrayValue);
void libCore_gf_PushArrayValueTrigger (string lp_arrayName, trigger lp_arrayValue);
void libCore_gf_PushArrayValueUnit (string lp_arrayName, unit lp_arrayValue);
void libCore_gf_PushArrayValueUnitGroup (string lp_arrayName, unitgroup lp_arrayValue);
int libCore_gf_GetArrayValueInteger (string lp_arrayName, int lp_arrayIndex);
fixed libCore_gf_GetArrayValueReal (string lp_arrayName, int lp_arrayIndex);
abilcmd libCore_gf_GetArrayValueAbilityCommand (string lp_arrayName, int lp_arrayIndex);
bool libCore_gf_GetArrayValueBoolean (string lp_arrayName, int lp_arrayIndex);
int libCore_gf_GetArrayValueDialog (string lp_arrayName, int lp_arrayIndex);
int libCore_gf_GetArrayValueDialogItem (string lp_arrayName, int lp_arrayIndex);
point libCore_gf_GetArrayValuePoint (string lp_arrayName, int lp_arrayIndex);
region libCore_gf_GetArrayValueRegion (string lp_arrayName, int lp_arrayIndex);
string libCore_gf_GetArrayValueString (string lp_arrayName, int lp_arrayIndex);
trigger libCore_gf_GetArrayValueTrigger (string lp_arrayName, int lp_arrayIndex);
unit libCore_gf_GetArrayValueUnit (string lp_arrayName, int lp_arrayIndex);
unitgroup libCore_gf_GetArrayValueUnitGroup (string lp_arrayName, int lp_arrayIndex);
int libCore_gf_SearchArrayValueInteger (string lp_arrayName, int lp_value);
int libCore_gf_SearchArrayValueReal (string lp_arrayName, fixed lp_value);
int libCore_gf_SearchArrayValueAbilityCommand (string lp_arrayName, abilcmd lp_value);
int libCore_gf_SearchArrayValueBoolean (string lp_arrayName, bool lp_value);
int libCore_gf_SearchArrayValueDialog (string lp_arrayName, int lp_value);
int libCore_gf_SearchArrayValueDialogItem (string lp_arrayName, int lp_value);
int libCore_gf_SearchArrayValuePoint (string lp_arrayName, point lp_value);
int libCore_gf_SearchArrayValueRegion (string lp_arrayName, region lp_value);
int libCore_gf_SearchArrayValueString (string lp_arrayName, string lp_value);
int libCore_gf_SearchArrayValueTrigger (string lp_arrayName, trigger lp_value);
int libCore_gf_SearchArrayValueUnit (string lp_arrayName, unit lp_value);
int libCore_gf_SearchArrayValueUnitGroup (string lp_arrayName, unitgroup lp_value);
void libCore_gf_SetArrayValuetoArrayValue (string lp_arrayName1, int lp_arrayIndex1, string lp_arrayName2, int lp_arrayIndex2);
void libCore_gf_SplitStringintoArray (string lp_arrayName, string lp_string, string lp_delimiter);
string libCore_gf_JoinArrayintoString (string lp_arrayName, string lp_glue);
int libCore_gf_IndexofGreatestLowestValue (string lp_arrayName, bool lp_greatestLowest);
void libCore_gf_sortArray (string lp_arrayName, bool lp_ascendingDescendingOrder);
void CopyArray (string lp_arrayName, string lp_newArrayName);
void libCore_gf_DeleteArrayKey (string lp_arrayName, int lp_arrayKey);
void libCore_gf_Move (string lp_arrayName, int lp_indexFrom, int lp_indexTo);
void libCore_gf_SwapArrayValues (string lp_arrayName, int lp_arrayIndex1, int lp_arrayIndex2);
void libCore_gf_ReverseArray (string lp_arrayName);
void libCore_gf_Shuffle (string lp_arrayName);
void libCore_gf_MergeArrays (string lp_arrayName1, string lp_arrayName2);
int libCore_gf_UnitInventoryItemPositionInInventoryOfUnit (string lp_inventoryItem, unit lp_unit);
unit libCore_gf_InventoryItemInInventoryPositionOfUnit (unit lp_unit, int lp_inventoryPosition);
void libCore_gf_RemoveInventoryItemUnitTypeFromInventoryOfUnitGroup (unitgroup lp_unitGroup, string lp_item);
bool libCore_gf_LoadoutElementIsNew (datetime lp_elementReleaseDateTime);
void libCore_gf_CreateMinimapPingStorm (playergroup lp_players, string lp_pingData, point lp_position, color lp_color, fixed lp_duration);
void libCore_gf_CreatePingFacingAngleWithType (playergroup lp_players, string lp_model, point lp_position, color lp_color, fixed lp_duration, fixed lp_angle, int lp_pingingPlayerID);
void libCore_gf_PlayerApplySkinReplacingExistingUnit (int lp_player, string lp_skin, bool lp_activateDeactivate);
playergroup libCore_gf_PlayerGroupExceptOfPlayer (playergroup lp_sourceGroup, int lp_exceptedPlayer);
int libCore_gf_RandomPlayerFromPlayerGroup (playergroup lp_playerGroup);
playergroup libCore_gf_PlayerGroupMuting (int lp_muteType, int lp_player, bool lp_muted);
playergroup PlayerGroupExceptOfPlayerGroup (playergroup lp_playerGroup, playergroup lp_playerGroupExclude);
point libCore_gf_PointFromPositionAndAngle (point lp_point, fixed lp_angle);
bool libCore_gf_TechAliasExist (int lp_catalog, string lp_catalogEntry, string lp_techAlias);
string libCore_gf_TechAliasToString (string lp_techAlias);
void libCore_gf_TechAliasSuppressHealResponseEffectOverride (string lp_effect);
void libCore_gf_TechAliasIgnoreCallForHelpBehaviorOverride (string lp_effect);
void libCore_gf_TechAliasPlayerIndexOverride (string lp_effect);
int libCore_gf_TriggerEventType ();
int libCore_gf_TriggerEventIndex ();
void libCore_gf_RunTriggerByNameStorm (string lp_triggerName, bool lp_check, bool lp_wait);
void libCore_gf_TriggerAddEventEffectUsed (int lp_player, string lp_effect, trigger lp_trigger);
void libCore_gf_TriggerAddEventTimer (timer lp_timer, trigger lp_trigger);
string libCore_gf_GetModelLinkForUnitType (string lp_unitType);
string libCore_gf_UnitTagUI (unit lp_unit);
int libCore_gf_UnitTagRecycle (unit lp_unit);
int libCore_gf_UnitTagIndex (unit lp_unit);
string libCore_gf_GetWeaponDamageForUnit2 (unit lp_unit);
string libCore_gf_GetWeaponDamageForUnit3 (unit lp_unit);
bool libCore_gf_UserDataBoolean (string lp_userDataInstance);
bool libCore_gf_UserDataDefaultInstance (string lp_userDataInstance);
bool libCore_gf_UserDataInstanceisUsed (string lp_userDataInstance);
void libCore_gf_SaveUserRecordValue (string lp_name, fixed lp_value, unit lp_location);
void libCore_gf_SaveUserRecordValueBoolean (string lp_name, bool lp_value, unit lp_location);
void libCore_gf_SaveUserRecordValueInteger (string lp_name, int lp_value, unit lp_location);
void libCore_gf_SaveUserRecordValueDialogItem (string lp_name, int lp_value, unit lp_location);
void libCore_gf_SaveUserRecordValueEffectSourceButtonIndex (string lp_name, int lp_value);
void libCore_gf_SaveUserRecordValueReal (string lp_name, fixed lp_value, unit lp_location);
void libCore_gf_SaveUserRecordValuePathDisplay (string lp_name, int lp_value, unit lp_location);
void libCore_gf_SaveUserRecordValueTalentIndex (string lp_name, int lp_value);
void libCore_gf_SaveUserRecordValueTokenCounterInstanceIndex (string lp_name, int lp_value);
void libCore_gf_SaveUserRecordValueTokenCounterBehaviorIndex (string lp_name, int lp_value);
fixed libCore_gf_ValueFromUserRecord (string lp_name, unit lp_location);
bool libCore_gf_ValueFromUserRecordBoolean (string lp_name, unit lp_location);
int libCore_gf_ValueFromUserRecordInteger (string lp_name, unit lp_location);
int libCore_gf_ValueFromUserRecordDialogItem (string lp_name, unit lp_location);
int libCore_gf_ValueFromUserRecordEffectSourceButtonIndex (string lp_name);
fixed libCore_gf_ValueFromUserRecordReal (string lp_name, unit lp_location);
int libCore_gf_ValueFromUserRecordPathDisplay (string lp_name, unit lp_location);
int libCore_gf_ValueFromUserRecordTalentIndex (string lp_name);
int libCore_gf_ValueFromUserRecordTokenCounterInstanceIndex (string lp_name);
int libCore_gf_ValueFromUserRecordTokenCounterBehaviorIndex (string lp_name);
string libCore_gf_UserRecordValueName (string lp_name, int lp_type);
bool libCore_gf_ExecuteValidatorOnUnit (string lp_validator, unit lp_sourceUnit, unit lp_targetUnit);
string libCore_gf__UnitDataName (int lp_type, unit lp_unit, int lp_index);
void libCore_gf_StoreActorForUnit (unit lp_unit, int lp_index, actor lp_actor);
actor libCore_gf_ActorStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StoreTextTagForUnit (unit lp_unit, int lp_index, int lp_textTag);
int libCore_gf_TextTagStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StorePointForUnit (unit lp_unit, int lp_index, point lp_point);
point libCore_gf_PointStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StoreRegionForUnit (unit lp_unit, int lp_index, region lp_region);
region libCore_gf_RegionStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StorePingForUnit (unit lp_unit, int lp_index, int lp_ping);
int libCore_gf_PingStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StoreIntegerForUnit (unit lp_unit, int lp_index, int lp_value);
int libCore_gf_IntegerStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StoreUnitForUnit (unit lp_unit, int lp_index, unit lp_value);
unit libCore_gf_UnitStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StoreUnitGroupForUnit (unit lp_unit, int lp_index, unitgroup lp_value);
unitgroup libCore_gf_UnitGroupStoredForUnit (unit lp_unit, int lp_index);

// Trigger Declarations
trigger libCore_gt_IncludeCore;
trigger libCore_gt_InitializeGameMod;
trigger libCore_gt_InitializeData;
trigger libCore_gt_InitializeMiscStuff;
trigger libCore_gt_InitializeDataMiningAndDebugOutput;
trigger libCore_gt_InitializeMAPSystemFlags;
trigger libCore_gt_DataInitializeAbilities;
trigger libCore_gt_DataAnnouncerVOMapDataFields;
trigger libCore_gt_DataInitializeAnnouncerVOData;
trigger libCore_gt_DataEffectsSourceButtonDataInitialize;
trigger libCore_gt_DataInitializeHeroes;
trigger libCore_gt_DataDeathTimes;
trigger libCore_gt_DataHeroVOMapDataFields;
trigger libCore_gt_DataHeroVOInitializeHeroVOData;
trigger libCore_gt_MapDataInitialize;
trigger libCore_gt_DataInitializeMountData;
trigger libCore_gt_DataInitializeSkinData;
trigger libCore_gt_DataInitializeTalentData;
trigger libCore_gt_TokenInitializeTokenData;
trigger libCore_gt_DataUnitHistoryDataInitialize;
trigger libCore_gt_InitializeUserDataEffectsSpecificEffects;
trigger libCore_gt_DataXPInitializeLevelXPValues;
trigger libCore_gt_TechAliasInitialize;

// Library Initialization
void libCore_InitVariables ();

