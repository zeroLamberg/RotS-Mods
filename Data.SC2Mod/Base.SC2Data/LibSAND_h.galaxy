include "LibCore_h"

//--------------------------------------------------------------------------------------------------
// Library: Sandbox
//--------------------------------------------------------------------------------------------------
// Constants
const int libSAND_gv_sandboxAutoPlayerThreshold_C = 8;
const fixed libSAND_gv_panelLockoutWait_C = 0.5;
const int libSAND_gv_sBXTownsMaxCount_C = 12;
const int libSAND_gv_sBXTownStructureMaxCount_C = 20;
const int libSAND_gv_sBXTownFlipDelayTime_C = 2;
const int libSAND_gv_sandboxXPMultiplierMaximumPercent_C = 12;
const int libSAND_gv_sandboxRespawnTimeMultiplierMaximumPercent_C = 12;
const int libSAND_gv_sandboxCooldownMultiplierMaximumPercent_C = 12;
const fixed libSAND_gv_cooldownMultiplierControllerMultuplier = 0.0625;
const int libSAND_gv_sandboxDamageDealtMaximumPercent_C = 12;
const int libSAND_gv_sandboxDamageTakenMaximumPercent_C = 12;
const int libSAND_gv_spawningDummyMaxCount_C = 20;
const fixed libSAND_gv_targetDummyDamageCooldown_C = 8.0;
const fixed libSAND_gv_healingDummyHealCooldown_C = 8.0;

// Structures
struct libSAND_gs_SandboxPanel {
    int lv_sandboxContainer;
    int lv_mainPanel;
    int lv_mainPanelCloseButton;
    int lv_mainPanelLockscreen;
    int lv_mainPanelLockscreenTitle;
    int lv_sharedControlCheckbox;
    int lv_gameSpeedButton;
    int lv_gameSpeedFrameMain;
    int lv_gameSpeedFrameCloseButton;
    int lv_gameSpeedFrameLockscreen;
    int lv_gameSpeedSetButton;
    int lv_gameSpeedSlider;
    int lv_gameSpeedLabel;
    int lv_toggleMechanicButton;
    int lv_toggleMechanicFrameMain;
    int lv_toggleMechanicFrameLockscreen;
    int lv_toggleMechanicFrameCloseButton;
    int lv_toggleMechanicPanelCheckbox;
    int lv_toggleMechanicPanelTitle;
    int lv_toggleMechanicPanelLeftTeamLabel;
    int lv_resetStructureButton;
    int lv_spawnCampsButton;
    int lv_spawnDummyButton;
    int lv_spawnDummyFrameMain;
    int lv_spawnDummyFrameTargetButton;
    int lv_spawnDummyFrameHealingButton;
    int lv_spawnDummyFrameCloseButton;
    int lv_clearAllDummyButton;
    int lv_teamLevelButton;
    int lv_levelFrameMain;
    int lv_levelFrameLockscreen;
    int lv_levelFrameCloseButton;
    int lv_leftTeamLevelSlider;
    int lv_leftTeamLevelLabel;
    int lv_leftTeamSetLevelButton;
    int lv_rightTeamLevelSlider;
    int lv_rightTeamLevelLabel;
    int lv_rightTeamSetLevelButton;
    int lv_toggleFoWButton;
    int lv_toggleFoWFrameMain;
    int lv_toggleFoWFrameLockscreen;
    int lv_toggleFoWFrameCloseButton;
    int lv_leftTeamToggleFoWCheckbox;
    int lv_rightTeamToggleFoWCheckbox;
    int lv_toggleMinionsButton;
    int lv_toggleMinionsFrameMain;
    int lv_toggleMinionsFrameLockscreen;
    int lv_toggleMinionsFrameCloseButton;
    int lv_leftTeamToggleMinionsCheckbox;
    int lv_rightTeamToggleMinionsCheckbox;
    int lv_infiniteManaButton;
    int lv_infiniteManaFrameMain;
    int lv_infiniteManaFrameLockscreen;
    int lv_infiniteManaFrameCloseButton;
    int lv_leftTeamInfiniteManaCheckbox;
    int lv_rightTeamInfiniteManaCheckbox;
    int lv_setRespawnTimeMultiplierButton;
    int lv_respawnTimeMultiplierFrameMain;
    int lv_respawnTimeMultiplierFrameLockscreen;
    int lv_respawnTimeFrameCloseButton;
    int lv_leftTeamRespawnTimeMultiplierSlider;
    int lv_leftTeamRespawnTimeMultiplierLabel;
    int lv_leftTeamSetRespawnTimeMultiplierButton;
    int lv_rightTeamRespawnTimeMultiplierSlider;
    int lv_rightTeamRespawnTimeMultiplierLabel;
    int lv_rightTeamSetRespawnTimeMultiplierButton;
    int lv_setCooldownMultiplierButton;
    int lv_cooldownMultiplierFrameMain;
    int lv_cooldownMultiplierFrameLockscreen;
    int lv_cooldownFrameCloseButton;
    int lv_leftTeamCooldownMultiplierSlider;
    int lv_leftTeamCooldownMultiplierLabel;
    int lv_leftTeamSetCooldownMultiplierButton;
    int lv_rightTeamCooldownMultiplierSlider;
    int lv_rightTeamCooldownMultiplierLabel;
    int lv_rightTeamSetCooldownMultiplierButton;
    int lv_setXPMultiplierButton;
    int lv_xPMultiplierFrameMain;
    int lv_xPMultiplierFrameLockscreen;
    int lv_xPMultiplierFrameCloseButton;
    int lv_leftTeamXPMultiplierSlider;
    int lv_leftTeamXPMultiplierLabel;
    int lv_leftTeamSetXPMultiplierButton;
    int lv_rightTeamXPMultiplierSlider;
    int lv_rightTeamXPMultiplierLabel;
    int lv_rightTeamSetXPMultiplierButton;
    int lv_setDamageDealtButton;
    int lv_damageDealtFrameMain;
    int lv_damageDealtFrameLockscreen;
    int lv_damageDealtFrameCloseButton;
    int lv_leftTeamDDSlider;
    int lv_leftTeamDDLabel;
    int lv_leftTeamSetDDButton;
    int lv_rightTeamDDSlider;
    int lv_rightTeamDDLabel;
    int lv_rightTeamSetDDButton;
    int lv_setDamageTakenButton;
    int lv_damageTakenFrameMain;
    int lv_damageTakenFrameLockscreen;
    int lv_damageTakenFrameCloseButton;
    int lv_leftTeamDTSlider;
    int lv_leftTeamDTLabel;
    int lv_leftTeamSetDTButton;
    int lv_rightTeamDTSlider;
    int lv_rightTeamDTLabel;
    int lv_rightTeamSetDTButton;
    int lv_resetTalentsButton;
    int lv_resetCooldownsButton;
    int lv_resetHPMPButton;
    int lv_completeQuestsButton;
    int lv_moveHeroButton;
    int lv_instantRespawnButton;
    int lv_customButton1;
    int lv_dummyDPSMeterPanel;
    int lv_dummyDamageTeamLabel;
    int lv_dummyDPSTeamLabel;
    int lv_dummyDamageMineLabel;
    int lv_dummyDPSMineLabel;
    int lv_dummyHealingMeterPanel;
    int lv_dummyHealLabel;
    int lv_dummyHealPerSecondLabel;
};

struct libSAND_gs_MMFieldOfSlaughterTown2 {
    string lv_buildingType;
    point lv_buildingPosition;
    fixed lv_buildingFacing;
};

struct libSAND_gs_SBXTown {
    text lv_townName;
    int lv_owningPlayer;
    unit lv_townHallUnit;
    libSAND_gs_MMFieldOfSlaughterTown2[libSAND_gv_sBXTownStructureMaxCount_C + 1] lv_structureArray;
};

// Variable Declarations
bool libSAND_gv_sandboxManualActivationEnabled;
int libSAND_gv_leaderPlayer;
libSAND_gs_SandboxPanel libSAND_gv_sandboxPanel;
text libSAND_gv_sandboxPanelLockscreenText;
bool[libCore_gv_bALMaxEnginePlayerCount + 1] libSAND_gv_mainPanelButtonEnabled;
bool libSAND_gv_sharedControl;
libSAND_gs_SBXTown[libSAND_gv_sBXTownsMaxCount_C + 1] libSAND_gv_sBXTowns;
bool libSAND_gv_resetStructureOnCooldown;
bool[libCore_gv_bALMaxEnginePlayerCount + 1] libSAND_gv_moveHereOnCooldown;
bool[libCore_gv_bALMaxEnginePlayerCount + 1] libSAND_gv_instantRespawnOnCooldown;
bool[libCore_gv_bALMaxEnginePlayerCount + 1] libSAND_gv_completeQuestOnCooldown;
bool[libCore_gv_bALMaxEnginePlayerCount + 1] libSAND_gv_resetHPMPOnCooldown;
bool[libCore_gv_bALMaxEnginePlayerCount + 1] libSAND_gv_resetCDOnCooldown;
bool libSAND_gv_mapMechanicOn;
bool libSAND_gv_mapMechanicButtonDisabled;
bool libSAND_gv_mapMechanicCheckboxEnabled;
bool[libCore_gv_bALMaxTeams + 1] libSAND_gv_toggleMinions;
bool libSAND_gv_toggleMinionsCheckboxEnabled;
bool[libCore_gv_bALMaxTeams + 1] libSAND_gv_foWDisabled;
revealer[libCore_gv_bALMaxTeams + 1] libSAND_gv_foWRevealer;
bool libSAND_gv_toggleFoWCheckboxEnabled;
bool[libCore_gv_bALMaxTeams + 1] libSAND_gv_infiniteManaOn;
bool libSAND_gv_infiniteManaCheckboxEnabled;
bool[libCore_gv_bALMaxEnginePlayerCount + 1] libSAND_gv_spawningDummyIsTarget;
bool[libCore_gv_bALMaxEnginePlayerCount + 1] libSAND_gv_spawningDummyGoing;
unitgroup[libCore_gv_bALMaxEnginePlayerCount + 1] libSAND_gv_targetDummies;
fixed[libCore_gv_bALMaxTeams + 1] libSAND_gv_targetDummyDamageTeamTimeStart;
fixed[libCore_gv_bALMaxTeams + 1] libSAND_gv_targetDummyDamageTeamTime;
fixed[libCore_gv_bALMaxEnginePlayerCount + 1] libSAND_gv_targetDummyDamagePlayerTimeStart;
fixed[libCore_gv_bALMaxEnginePlayerCount + 1] libSAND_gv_targetDummyDamagePlayerTime;
fixed[libCore_gv_bALMaxTeams + 1] libSAND_gv_targetDummyDamageTeam;
fixed[libCore_gv_bALMaxTeams + 1] libSAND_gv_targetDummyDamageTeamOld;
fixed[libCore_gv_bALMaxEnginePlayerCount + 1] libSAND_gv_targetDummyDamagePlayer;
fixed[libCore_gv_bALMaxEnginePlayerCount + 1] libSAND_gv_targetDummyDamagePlayerOld;
unitgroup[libCore_gv_bALMaxEnginePlayerCount + 1] libSAND_gv_healingDummies;
fixed[libCore_gv_bALMaxEnginePlayerCount + 1] libSAND_gv_healingDummyHealTimeStart;
fixed[libCore_gv_bALMaxEnginePlayerCount + 1] libSAND_gv_healingDummyHealTime;
fixed[libCore_gv_bALMaxEnginePlayerCount + 1] libSAND_gv_healingDummyHeal;
fixed[libCore_gv_bALMaxEnginePlayerCount + 1] libSAND_gv_healingDummyHealOld;

// Function Declarations
void libSAND_gf_SandboxSetLeaderPlayer (int lp_player);
text libSAND_gf_TeamName (int lp_team);
text libSAND_gf_FormatSandboxItemName (text lp_name);
text libSAND_gf_FormatSandboxItemValue (text lp_value);
text libSAND_gf_FormatSandboxPlayerName (int lp_player, int lp_forTeam);
bool libSAND_gf_PlayerHeroIsDead (int lp_player);
bool libSAND_gf_PlayerIsDead (int lp_player);
void libSAND_gf_SandboxPanelShowHideDummyPanel (bool lp_showHide, playergroup lp_forPlayers);
void libSAND_gf_SandboxPanelShowHideHealingDummyPanel (bool lp_showHide, playergroup lp_forPlayers);
void libSAND_gf_SandboxPanelSetMapMechanicUIText (text lp_titleText, text lp_leftTeamLabelText);
void libSAND_gf_SandboxTurnButtonListenerTriggersOnOff (bool lp_onOff);
void libSAND_gf_EnableDisableMainPanelButtonsforPlayer (int lp_player, bool lp_enableorDisable);
void libSAND_gf_HideAllSubpanelsforPlayer (int lp_player);
void libSAND_gf_SBXAddTownData (unitgroup lp_buildingUnitGroup, int lp_townNumber, text lp_townName);
void libSAND_gf_SBXRespawnTown (int lp_townNumber);
void libSAND_gf_SBXBuildTownStructure (int lp_townNum, int lp_structureNum, fixed lp_curseTimer);
void libSAND_gf_SBXRemoveDeathModelsInRegion (region lp_region);
void libSAND_gf_InstantRespawnPlayer (int lp_player);
void libSAND_gf_ResetHPMapForPlayer (int lp_player);
int libSAND_gf_GameSpeedIndex (int lp_speed);
int libSAND_gf_GameSpeedFromIndex (int lp_index);
text libSAND_gf_GameSpeedText (int lp_speed);
void libSAND_gf_SetTeamLevel (int lp_player, int lp_level, int lp_teamIndex);
void libSAND_gf_UpdateScaling (int lp_level);
void libSAND_gf_SetTeamXPMultiplier (int lp_player, int lp_newXPMultiplier, int lp_teamIndex);
void libSAND_gf_SetTeamRespawnTimeMultiplier (int lp_player, int lp_newRespawnTimeMultiplier, int lp_teamIndex);
void libSAND_gf_SetTeamCooldownMultiplier (int lp_player, int lp_newCooldownMultiplier, int lp_teamIndex);
void libSAND_gf_SetTeamDamageDealt (int lp_player, int lp_newDamageMultiplier, int lp_teamIndex);
void libSAND_gf_SetTeamDamageTaken (int lp_player, int lp_newDamageMultiplier, int lp_teamIndex);
void libSAND_gf_SpawnDummy (bool lp_target, int lp_player);
int libSAND_gf_NumberofTargetDummies (int lp_team);
int libSAND_gf_NumberofHealingDummies (int lp_team);

// Trigger Declarations
trigger libSAND_gt_IncludeSandbox;
trigger libSAND_gt_SandboxInit;
trigger libSAND_gt_SandboxTurnOn;
trigger libSAND_gt_SandboxTurnOff;
trigger libSAND_gt_SandboxLeaderDisconnected;
trigger libSAND_gt_SandboxChatMessage;
trigger libSAND_gt_SandboxPanelInitialize;
trigger libSAND_gt_DisableButtonsUntilGameStart;
trigger libSAND_gt_SharedControlCheckboxClicked;
trigger libSAND_gt_SBXAddTownData;
trigger libSAND_gt_ResetStructuresButtonPressed;
trigger libSAND_gt_MovePlayerHereButtonPressed;
trigger libSAND_gt_ResetTalentsButtonPressed;
trigger libSAND_gt_InstantRespawnButtonPressed;
trigger libSAND_gt_CompleteQuestsButtonPressed;
trigger libSAND_gt_ResetHPMapButtonPressed;
trigger libSAND_gt_SpawnCampsButtonPressed;
trigger libSAND_gt_ClearAllDummiesButtonPressed;
trigger libSAND_gt_ResetCDButtonPressed;
trigger libSAND_gt_MapMechanicButtonPressed;
trigger libSAND_gt_MapMechanicCheckboxPressed;
trigger libSAND_gt_MapMechanicCloseButtonPressed;
trigger libSAND_gt_MapMechanicWarningStarted;
trigger libSAND_gt_ToggleMinionsButtonPressed;
trigger libSAND_gt_ToggleMinionsCheckboxPressed;
trigger libSAND_gt_ToggleMinionsCloseButtonPressed;
trigger libSAND_gt_ToggleFoWButtonPressed;
trigger libSAND_gt_ToggleFoWCheckboxPressed;
trigger libSAND_gt_ToggleFoWCloseButtonPressed;
trigger libSAND_gt_InfiniteManaButtonPressed;
trigger libSAND_gt_InfiniteManaCheckboxPressed;
trigger libSAND_gt_InfiniteManaBehavior;
trigger libSAND_gt_InfiniteManaCloseButtonPressed;
trigger libSAND_gt_SetGameSpeedMainButtonPressed;
trigger libSAND_gt_SetGameSpeedSetButtonPressed;
trigger libSAND_gt_SetGameSpeedCloseButtonPressed;
trigger libSAND_gt_GameSpeedChanged;
trigger libSAND_gt_TeamLevelSliderValueChanged;
trigger libSAND_gt_TeamLevelMainButtonPressed;
trigger libSAND_gt_TeamLevelSetLevelButtonPressed;
trigger libSAND_gt_TeamLevelCloseButtonPressed;
trigger libSAND_gt_XPMultiplierSliderValueChanged;
trigger libSAND_gt_XPMultiplierMainButtonPressed;
trigger libSAND_gt_XPMultiplierSetButtonPressed;
trigger libSAND_gt_XPMultiplierCloseButtonPressed;
trigger libSAND_gt_RespawnTimeMultiplierSliderValueChanged;
trigger libSAND_gt_RespawnTimeMultiplierMainButtonPressed;
trigger libSAND_gt_RespawnTimeMultiplierSetButtonPressed;
trigger libSAND_gt_RespawnTimeMultiplierCloseButtonPressed;
trigger libSAND_gt_CooldownMultiplierSliderValueChanged;
trigger libSAND_gt_CooldownMultiplierMainButtonPressed;
trigger libSAND_gt_CooldownMultiplierSetButtonPressed;
trigger libSAND_gt_CooldownMultiplierCloseButtonPressed;
trigger libSAND_gt_CooldownMultiplierControllerSpecificAbilities;
trigger libSAND_gt_DamageDealtSliderValueChanged;
trigger libSAND_gt_DamageDealtMainButtonPressed;
trigger libSAND_gt_DamageDealtSetButtonPressed;
trigger libSAND_gt_DamageDealtCloseButtonPressed;
trigger libSAND_gt_DamageTakenSliderValueChanged;
trigger libSAND_gt_DamageTakenMainButtonPressed;
trigger libSAND_gt_DamageTakenSetButtonPressed;
trigger libSAND_gt_DamageTakenCloseButtonPressed;
trigger libSAND_gt_SpawnDummyButtonPressed;
trigger libSAND_gt_SpawnDummyCloseButtonPressed;
trigger libSAND_gt_SpawnDummyDummyButtonPressed;
trigger libSAND_gt_TargetDummyDamageMonitor;
trigger libSAND_gt_TargetDummyTakesDamage;
trigger libSAND_gt_HealingDummyDamageMonitor;
trigger libSAND_gt_HealingDummyGettingHeal;
trigger libSAND_gt_DEBUGResetalltowns;
trigger libSAND_gt_DEBUGFollowStatus;
trigger libSAND_gt_DEBUGUnfollow;
trigger libSAND_gt_DEBUGFollow;

// Library Initialization
void libSAND_InitVariables ();

